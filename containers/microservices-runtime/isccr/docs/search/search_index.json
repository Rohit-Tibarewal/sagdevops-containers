{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Overview Integration Server Continuous Code Review (ISCCR) has been developed by Software AG Global Consulting Services, and is provided through subscription license as a PERFORMANCE.READY tool. It's aim is to provide quality check processing for Integration Server developments, both as part of a continuous integration and local development approach with Integration Server. It checks and enables a development team to improve quality of your Integration Server services thereby assisting with readability, quality, standardizaton and ultimately minimising cost of change and reduces the maintenance burden. This tool has a large number of customisable review points covering: Quality issues Common Mistakes Coding standards Deprecated services plus many other service properties and coding issues. Compatibility Integration Server Continuous Code review is tested and compatible with the following releases of Integration Server: webNethods v10.5 webMethods v10.4 webMethods v10.3 webMethods v10.2 webMethods v10.1 webMethods v10.0 webMethods v9.12 webMethods v9.10 webMethods v9.9 webMethods v9.8 webMethods v9.7 webMethods v9.6 webMethods v9.5 webMethods v9.0 webMethods v8.2 It has also been tested and is compatible with the following releases of the Microservices Runtime: webNethods v10.5 webMethods v10.4 webMethods v10.3 webMethods v10.2 webMethods v10.1 Compatibility is also confirmed for the webMethods Service Designer Release which uses the Microservices Runtime Installation Code Review Engine Zip File Extraction The ISCCR execution engine is distributed as a zip file and can simply be extracted into a location of your choosing (e.g. C:\\SoftwareAG\\tools\\CodeReview within the file system. The file system within the zip file must be maintained whilst extracting, and will create a file structure similar to: License File Following extraction, before execution you\u2019ll need to copy the code review engine licence file, renaming to license.txt into this directory, e.g. Editing CodeReview.cmd If you intend to use the sample windows script provided, and in particular if you\u2019re running the code review from within a Continuous Integration tool such as Jenkins, this file will need modifying to including the full path to the location where the tool has been extracted, e.g. assuming you extract the file to: c:\\SoftwareAG\\tools\\ISCCR You'll need to modify the CodeReview.cmd updating the CODEREVIEW_HOME environment variable, replacing the . with the full path to the installation directory i.e, find and replace the command SET CODE_REVIEW_HOME=. and change the '.' to your installation directory, e.g. SET CODE_REVIEW_HOME=c:\\SoftwareAG\\tools\\ISCCR Setting JAVA_HOME It's also recommended to set the JAVA_HOME environment variable. The code review tool in windows will attempt to discover a suitable JVM to execute, however this should ideally be set teo the one distributed within webmethods, e.g. Eclipse Plugin The eclipse plugin is distributed as a zip file that can de installed into your Software AG designer eclipse environment as follows: Stop any instances of Designer that are currently running Browse to the designer eclipse dropins folder within the Software AG installation, e.g. c:\\SoftwareAG\\Designer\\eclipse\\dropins Remove any previous ISCCR directory from the dropins location Create a directory in the dropins location named: ISCCR Unzip the eclipse plugin into the ISCCR directory This should create a file system structure as follows C:\\SoftwareAG\\Designer\\eclipse\\dropins\\ISCCRv4\\plugins\\ContinuousCodeReview_Plugin_x.x.x.x.jar Start Designer After a few minutes designer will start with the plugin installed Warning Please be patient \u2013 the installation will take a few minutes and designer may look like the process has hung. Do NOT kill the designer process otherwise the installation will fail and further installations will be blocked without creating a different base directory (not called ISCCR) within the dropins location.* On startup, enter the window/preferences settings as required, e.g: Configure by pointing to the installation of the code review engine, and to the packages root folder within the designer where the plugin is installed Additionally, add the prefixes of custom packages that you wish to be reviewed and any JVM Parameters. When finished press ok WxISCCR Package Note This pacakge only exists to support the older Centralized (Non-Local Development) approach, and is otherwise not needed The WxISCCR package is provided as a zip, that can be imported into the Integration Server as any other package, through the install inbound pacakges functionality. Quick Start Windows Command Line Execution Single Package Review After following the installation notes above, ISCCR can be run in windows to review single packages using the supplied command script by opening a command prompt, navigating to the extracted directory and supplying individual package details. The format of the command prompt is as follows: CodeReview.cmd -Dcode.review.directory=[LOCATION OF PACKAGES DIRECTORY] -Dcode.review.pkgname=[PACKAGE NAME] -Dcode.review.pkgprefix=[PACKAGE PREFIX LETTERS] Example Assuming a package named IotDemo CodeReview.cmd -Dcode.review.directory=c:\\softwareag\\IntegrationServer\\instances\\default\\packages -Dcode.review.pkgname=IotDemo -Dcode.review.pkgprefix=Iot The output of this command for a \"Passed test\" with \"INFO\" level logging will be similar to: 2019-05-21 18:54:03 INFO webMethods Integration Server Continuous Code Review 2019-05-21 18:54:03 INFO Software AG Global Consulting Services 2019-05-21 18:54:03 INFO Copyright (C)2018 Software AG. All rights reserved 2019-05-21 18:54:03 INFO Contact : GCS_tool_support@softwareag.com 2019-05-21 18:54:03 INFO Version : _VERSION_ 2019-05-21 18:54:03 INFO Build : _BUILD_ 2019-05-21 18:54:03 INFO Run Mode: INTERACTIVE 2019-05-21 18:54:03 INFO ------------------------------------------------------------------------- 2019-05-21 18:54:03 INFO Exec Directory [C:/development/isccr/cont-code-review/trunk/FlowCodeChecker/bin/] 2019-05-21 18:54:03 INFO Loading Default Configuration Options File 2019-05-21 18:54:03 INFO Options File [*/config.xml] 2019-05-21 18:54:04 INFO Custom Options [*\\IsccrTestFq8a\\\\config\\codereview.xml] exists within package - Loading and merging with settings] 2019-05-21 18:54:04 INFO Custom Options [*] provided. Loading and merging with defaults 2019-05-21 18:54:04 INFO Code Directory [*\\IsccrTestFq8a\\] 2019-05-21 18:54:04 INFO Report Directory [] 2019-05-21 18:54:04 INFO Run Mode [INTERACTIVE] 2019-05-21 18:54:04 INFO webMethods Vers [10.4] 2019-05-21 18:54:04 INFO ------------------------ LICENCE DETAILS ------------------------ 2019-05-21 18:54:04 INFO Using License file : ************************** 2019-05-21 18:54:04 INFO Licensed to : ************************** 2019-05-21 18:54:04 INFO Serial Number: : ************************** 2019-05-21 18:54:04 INFO License Comments : ************************** 2019-05-21 18:54:04 INFO Licence Checked and is valid 2019-05-21 18:54:04 INFO Package Name [IsccrTestFq8a] 2019-05-21 18:54:04 INFO EXECUTING OPERATIONS 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [SP1] 2019-05-21 18:54:04 INFO Rule Index [1] 2019-05-21 18:54:04 INFO Name [Stateless] 2019-05-21 18:54:04 INFO Description [Services should be stateless to avoid creating session state where not needed. Each session consumes resources on the IS, consumes memory, creates a database entry, and in a clustered environment needs to be synchronized between cluster nodes. To minimize the build-up of unnecessary sessions it is recommended to ensure stateless services are used where possible. This can be changed on the 'stateless' flow property within Designer by setting the value to yes. The table below highlights all services in the package which are currently configured as stateless] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.ServiceProperties] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [SP2] 2019-05-21 18:54:04 INFO Rule Index [2] 2019-05-21 18:54:04 INFO Name [Pipeline Save Restore] 2019-05-21 18:54:04 INFO Description [No Save/Restore Pipeline options should be set against the service. The Save/Restore pipeline options where set can result in unnecessary I/O and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised. It is recommended to remote these options from the services before deployment to a non-development environment, or use the extended property (watt.server.pipeline.processor) to disable these in the non-development environments. Where this is the case, this rule can be ignored] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.ServiceProperties] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ1] 2019-05-21 18:54:04 INFO Rule Index [3] 2019-05-21 18:54:04 INFO Name [Pipeline Services] 2019-05-21 18:54:04 INFO Description [No Save/Restore/Trace Pipieline services should exist within the flow service. Save/Restore pipeline services result in unnecessary I/O and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised. It is recommended to delete these from the services before deployment to a non-development environment to ensure maximum performance. Alternative to this is to use the pipeline service options from within designer and disable these in the non-development environments as described in the previous check.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.ServiceUsageChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ2] 2019-05-21 18:54:04 INFO Rule Index [4] 2019-05-21 18:54:04 INFO Name [Clear Pipeline] 2019-05-21 18:54:04 INFO Description [The ClearPipeline service should not be used as pipeline variables should be dropped immediately as soon as they are no longer required. ClearPipeline leads to unnecessary overhead at the pipeline is walked to determine whether to preserve or drop variables, and can have significant impact on performance when a large pipeline is present. It is recommended to delete these services from the flow and drop variables once they are no longer needed.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.ServiceUsageChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ3] 2019-05-21 18:54:04 INFO Rule Index [5] 2019-05-21 18:54:04 INFO Name [Deprecated Services] 2019-05-21 18:54:04 INFO Description [Use of deprecated services is not recommended as these will be dropped from the product in a future release. Please refer to the built-in-services-guide for replacements to any deprecated services discovered to be in use and modify the flow to remove the deprecated service and update with the recommended alternative.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.ServiceUsageChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ4] 2019-05-21 18:54:04 INFO Rule Index [6] 2019-05-21 18:54:04 INFO Name [Disabled Services] 2019-05-21 18:54:04 INFO Description [services should be removed to avoid performance issues as the flow is interpreted during execution. This also results in smaller, more maintainable flow services which result in a better understanding and lower cost of maintenance. Recommendation is to delete rather than disable any code no longer needed.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ5] 2019-05-21 18:54:04 INFO Rule Index [7] 2019-05-21 18:54:04 INFO Name [Use of Pub.Storage] 2019-05-21 18:54:04 INFO Description [pub.storage services should not be used due to performance issues. The pub.storage services have an implicit locking model and are not intended to be a high performance all-purpose database. Where pub.storage services have been used, it is recommended to re-architect these, particularly in high-throughput scenarios.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.ServiceUsageChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ6] 2019-05-21 18:54:04 INFO Rule Index [8] 2019-05-21 18:54:04 INFO Name [Debug Log] 2019-05-21 18:54:04 INFO Description [Debug Log services should be removed to avoid performance issues during execution. Where logging is required, the recommendation is to implement a more general purpose and configurable logging framework to help keep you logs more manageable and separate from product logging] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.ServiceUsageChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ7] 2019-05-21 18:54:04 INFO Rule Index [9] 2019-05-21 18:54:04 INFO Name [Public Services Try/Catch] 2019-05-21 18:54:04 INFO Description [Public services must have a try catch within them to ensure graceful handling of error conditions when these occur. Public services (or top level services) need to decide how to retry or return the error condition to the consuming application. Recommendation is to use Sequence nodes to wrap the execution of the public service within a try/catch block and use the catch to handle the error condition. Try/catch can be achieved with sequence nodes by having a top level sequence with the exit on value set to \"SUCCESS\" and 2 inner sequences, the try, with the exit on value set to \"FAILURE\" and the catch, with the exit on value set to \"DONE\". It is also recommended to add comments to these sequences to aid understanding so that a developer can identify these are for try/catch usage. ] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FilteredFlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ8] 2019-05-21 18:54:04 INFO Rule Index [10] 2019-05-21 18:54:04 INFO Name [Connections Package] 2019-05-21 18:54:04 INFO Description [All JDBC Adapter connections should be in separate packages, that is a package should not contain connections mixed in with other assets. This aids deployment of services as this means changes to packages can be deployed without unnecessarily affecting the JDBC Adapter database connections. Recommendation is to have adapter connections in packages on their own, and not mix these types.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.ConnectionsChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ9] 2019-05-21 18:54:04 INFO Rule Index [11] 2019-05-21 18:54:04 INFO Name [FTP Timeout] 2019-05-21 18:54:04 INFO Description [Ensure timeout is specified on FTP services. If no timeout is specified on FTP services, the default timeout value is unlimited, meaning there is a possibility of consuming threads on the Integration Server for a long period of time, especially in the scenario where the FTP server isn't available. Recommendation is to add a timeout value to the invocation where these services are used.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ10] 2019-05-21 18:54:04 INFO Rule Index [12] 2019-05-21 18:54:04 INFO Name [Service invoke comments] 2019-05-21 18:54:04 INFO Description [Comments should be provided for each service that is invoked from the main service. This helps to improve code readability and maintainability to help reduce cost of change. Every service invoke should have a comment value set.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [true] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ11] 2019-05-21 18:54:04 INFO Rule Index [13] 2019-05-21 18:54:04 INFO Name [Sequence comments] 2019-05-21 18:54:04 INFO Description [Comments should be provided for each sequence node that is used. This helps to improve code readability and maintainability to help reduce cost of change. Every sequence node should have a comment value set.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [true] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ12] 2019-05-21 18:54:04 INFO Rule Index [14] 2019-05-21 18:54:04 INFO Name [Unauthorised Access/Orphaned] 2019-05-21 18:54:04 INFO Description [All services within this package should be invoked through a public service. This rule Identifies any assets within the package that are not used directly or indirectly from a public flow service or DSP file contained within this package, and therefore are either not used, or are called from outside the package breaking the public/private access principle.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.OrphanedChecker] 2019-05-21 18:54:04 INFO Ignore Failure [true] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ13] 2019-05-21 18:54:04 INFO Rule Index [15] 2019-05-21 18:54:04 INFO Name [Branch without switch or evaluate labels] 2019-05-21 18:54:04 INFO Description [The BRANCH step selects and executes a child step based on the value of one or more variables in the pipeline. You indicate the variables you want to branch on by specifying a switch value or by writing an expression that includes the variables, therefore a branch must have either a switch value or have evaluate labels set to true.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ14] 2019-05-21 18:54:04 INFO Rule Index [16] 2019-05-21 18:54:04 INFO Name [Branch on expression when child step is without specified label or $null] 2019-05-21 18:54:04 INFO Description [If you branch on expressions (Evaluate labels is set to True), you cannot branch on null or empty values. When executing the BRANCH step and evaluating labels, Integration Server ignores target steps with a blank or set to $null label.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ15] 2019-05-21 18:54:04 INFO Rule Index [17] 2019-05-21 18:54:04 INFO Name [Exit Node From Specification] 2019-05-21 18:54:04 INFO Description [The EXIT step exits the entire flow service or a single flow step. Specifically, it may exit from the nearest ancestor loop step, a specified ancestor step, the parent step, or the entire flow service. An exit 'From' value is required to determine where to exit from] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ16] 2019-05-21 18:54:04 INFO Rule Index [18] 2019-05-21 18:54:04 INFO Name [Branch step must have child nodes] 2019-05-21 18:54:04 INFO Description [A Branch step in a flow service must have a child node for it to be relevant. If a branch step has no child nodes it should be deleted] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ17] 2019-05-21 18:54:04 INFO Rule Index [19] 2019-05-21 18:54:04 INFO Name [Loop step must have child nodes] 2019-05-21 18:54:04 INFO Description [A Loop step in a flow service must have a child node for it to be relevant. If a loop step has no child nodes it should be deleted] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ18] 2019-05-21 18:54:04 INFO Rule Index [20] 2019-05-21 18:54:04 INFO Name [Repeat step must have child nodes] 2019-05-21 18:54:04 INFO Description [A Repeat step in a flow service must have a child node for it to be relevant. If a repeat step has no child nodes it should be deleted] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ19] 2019-05-21 18:54:04 INFO Rule Index [21] 2019-05-21 18:54:04 INFO Name [Sequence step must have child nodes] 2019-05-21 18:54:04 INFO Description [A Sequence step in a flow service must have a child node for it to be relevant. If a sequence step has no child nodes it should be deleted] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ20] 2019-05-21 18:54:04 INFO Rule Index [22] 2019-05-21 18:54:04 INFO Name [Map steps must have mapped fields] 2019-05-21 18:54:04 INFO Description [A Map step in a flow service must have mapped fields. If a map step has no mapped fields it should be deleted] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ21] 2019-05-21 18:54:04 INFO Rule Index [23] 2019-05-21 18:54:04 INFO Name [Loop must have an input array provided] 2019-05-21 18:54:04 INFO Description [A loop step must have an input array variable provided] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ22] 2019-05-21 18:54:04 INFO Rule Index [24] 2019-05-21 18:54:04 INFO Name [Flow service should not be empty] 2019-05-21 18:54:04 INFO Description [A flow service should contain implementation, otherwise it should be removed from the package] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ23] 2019-05-21 18:54:04 INFO Rule Index [25] 2019-05-21 18:54:04 INFO Name [Try step must have child nodes] 2019-05-21 18:54:04 INFO Description [A try step in a flow service must have a child node for it to be relevant. If a try step has no child nodes it should be deleted] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ24] 2019-05-21 18:54:04 INFO Rule Index [26] 2019-05-21 18:54:04 INFO Name [Catch step must have child nodes] 2019-05-21 18:54:04 INFO Description [A catch step in a flow service must have a child node for it to be relevant. If a catch step has no child nodes it should be deleted] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ25] 2019-05-21 18:54:04 INFO Rule Index [27] 2019-05-21 18:54:04 INFO Name [Finally step must have child nodes] 2019-05-21 18:54:04 INFO Description [A finally step in a flow service must have a child node for it to be relevant. If a finally step has no child nodes it should be deleted] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS1] 2019-05-21 18:54:04 INFO Rule Index [28] 2019-05-21 18:54:04 INFO Name [Root Folder Name] 2019-05-21 18:54:04 INFO Description [Root Folder should not be the same as the package as this can cause namespace issues should the code need to be refactored or moved to other packages for promotion to common services, inhibiting reusability. Recommendation is to set a separate prefix folder structure from the package and use this across all packages differentiating below the prefix. This can be one or two levels deep (but ideally should be no more) and commonly is the inverse domain name of the organisation, e.g. \"com.softwareag\"] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS2] 2019-05-21 18:54:04 INFO Rule Index [29] 2019-05-21 18:54:04 INFO Name [Folder Name] 2019-05-21 18:54:04 INFO Description [Folders should only contain lower case ascii characters and digits. In certain scenarios, use of the underscore character '_' is allowed but should be avoided where possible.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS3] 2019-05-21 18:54:04 INFO Rule Index [30] 2019-05-21 18:54:04 INFO Name [Folder Prefix] 2019-05-21 18:54:04 INFO Description [Ensure that all assets exist within the specified prefix folders. Recommendation is to set a separate prefix folder structure from the package and use this across all packages differentiating below the prefix. This can be one or two levels deep (but ideally should be no more) and commonly is the inverse domain name of the organisation, e.g. \"com.softwareag\".] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS4] 2019-05-21 18:54:04 INFO Rule Index [31] 2019-05-21 18:54:04 INFO Name [Package Name] 2019-05-21 18:54:04 INFO Description [Ensure the package prefix has been specified and package name conforms to standards. <br/>1. The package name should not end with the word \"Package\" or \"Pkg\". <br/>2. Package names must not be prefixed with \"Wm\". These usually represent packages distributed by webMethods. <br/>3. Packages should start with an uppercase character and only contain alpha numeric character plus the underscore when absolutely required.. <br/>4. Package Name should start with your provided prefix. A package prefix aids identification of packages created by the organisation.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS5] 2019-05-21 18:54:04 INFO Rule Index [32] 2019-05-21 18:54:04 INFO Name [Service Name] 2019-05-21 18:54:04 INFO Description [Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST services)] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS6] 2019-05-21 18:54:04 INFO Rule Index [33] 2019-05-21 18:54:04 INFO Name [Document Name] 2019-05-21 18:54:04 INFO Description [Ensure Document definition names conform to naming standards. A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary. Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS7] 2019-05-21 18:54:04 INFO Rule Index [34] 2019-05-21 18:54:04 INFO Name [Schema Name] 2019-05-21 18:54:04 INFO Description [Ensure Schemas definitions conform to naming standards. A schema must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS8] 2019-05-21 18:54:04 INFO Rule Index [35] 2019-05-21 18:54:04 INFO Name [FlatFile Name] 2019-05-21 18:54:04 INFO Description [Ensure Flat File Dictionaries and Schema definitions conform to naming standards. They must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS9] 2019-05-21 18:54:04 INFO Rule Index [36] 2019-05-21 18:54:04 INFO Name [Blaze Name] 2019-05-21 18:54:04 INFO Description [Ensure Blaze Rules Conform to the Naming Standards. Blaze rule service names must only contain alpha numeric characters and the underscore when absolutely necessary.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS10] 2019-05-21 18:54:04 INFO Rule Index [37] 2019-05-21 18:54:04 INFO Name [XSL Name] 2019-05-21 18:54:04 INFO Description [Ensure XSL Services Conform to the Naming Standards. XSL service names must start with a lower case letter, should be camel case, and contain only alpha numeric characters] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS11] 2019-05-21 18:54:04 INFO Rule Index [38] 2019-05-21 18:54:04 INFO Name [Adapter Name] 2019-05-21 18:54:04 INFO Description [Ensure Adapter Services Conform to the Naming Standards. Adapter service names must start with a lower case letter, should be camel case, and contain only alpha numeric characters] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS12] 2019-05-21 18:54:04 INFO Rule Index [39] 2019-05-21 18:54:04 INFO Name [Trigger Name] 2019-05-21 18:54:04 INFO Description [Ensure Triggers Conform to the Naming Standards. Trigger names must start with a lower case letter, should be camel case, and contain only alpha numeric characters] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS13] 2019-05-21 18:54:04 INFO Rule Index [40] 2019-05-21 18:54:04 INFO Name [WSD Name] 2019-05-21 18:54:04 INFO Description [Ensure WSDs Conform to the Naming Standards. WSD names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS14] 2019-05-21 18:54:04 INFO Rule Index [41] 2019-05-21 18:54:04 INFO Name [Connection Name] 2019-05-21 18:54:04 INFO Description [Ensure Connections Conform to the Naming Standards. Connection names must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS15] 2019-05-21 18:54:04 INFO Rule Index [42] 2019-05-21 18:54:04 INFO Name [Document variable name] 2019-05-21 18:54:04 INFO Description [Ensure variable names within document defintions conform to the naming standards. Variable names in document definitions must start with a lower case letter, should be camel case, and contain only alpha numeric characters. Caters for documents generated from XSDs where the document name may contain namespace prefix and use of underscore and hyphen present] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.DocumentChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS16] 2019-05-21 18:54:04 INFO Rule Index [43] 2019-05-21 18:54:04 INFO Name [Service Signature Name] 2019-05-21 18:54:04 INFO Description [Ensure Input/Output variables in service signatures conform to the naming standards. Variable names in service signatures must start with a lower case letter, should be camel case, and contain only alpha numeric characters] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowSignatureChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS17] 2019-05-21 18:54:04 INFO Rule Index [44] 2019-05-21 18:54:04 INFO Name [REST Resource Name] 2019-05-21 18:54:04 INFO Description [Ensure REST Resouces Conform to the Naming Standards. REST resource names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS18] 2019-05-21 18:54:04 INFO Rule Index [45] 2019-05-21 18:54:04 INFO Name [REST Descriptor Name] 2019-05-21 18:54:04 INFO Description [Ensure REST Descriptors conform to the Naming Standards. REST descriptor names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [MS1] 2019-05-21 18:54:04 INFO Rule Index [46] 2019-05-21 18:54:04 INFO Name [Non-Production Service Package Suffixes] 2019-05-21 18:54:04 INFO Description [Ensure packages with specified suffixes are not deployed to production. This is to ensure that test packages (*_TEST), stub packages (*_STUB) and development packages (*_DEV) are not deployed incorrectly into production class environments.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO OPERATIONS EXECUTION COMPLETE (in 233ms) 2019-05-21 18:54:04 INFO EXECUTING [PACKAGE SCOPED] SENSORS 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Sensor Id [1] 2019-05-21 18:54:04 INFO Name [totals] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.sensors.TotalsSensor] 2019-05-21 18:54:04 INFO Scope [package] 2019-05-21 18:54:04 INFO Decorator Name [FlowTotals] 2019-05-21 18:54:04 INFO Decorator Impl [com.softwareag.gcs.wm.codereview.decorators.SummaryTotals] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Sensor Id [2] 2019-05-21 18:54:04 INFO Name [CodeLines] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.sensors.CodeLines] 2019-05-21 18:54:04 INFO Scope [package] 2019-05-21 18:54:04 INFO Decorator Name [FlowComplexity] 2019-05-21 18:54:04 INFO Decorator Impl [com.softwareag.gcs.wm.codereview.decorators.FlowComplexity] 2019-05-21 18:54:04 INFO Decorator Name [FlowTotals] 2019-05-21 18:54:04 INFO Decorator Impl [com.softwareag.gcs.wm.codereview.decorators.FlowTotals] 2019-05-21 18:54:04 INFO EXECUTING OUTPUT RENDERERS 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Name [CodeReviewResultsXml] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.renderers.XMLRenderer] 2019-05-21 18:54:04 INFO Scope [all] 2019-05-21 18:54:04 INFO Creating XML file [C:\\development\\isccr\\cont-code-review\\trunk\\FlowCodeChecker\\IsccrTestFq8a__CodeReviewReport__CodeReviewResultsXml.xml] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Name [html-package] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.renderers.XSLRenderer] 2019-05-21 18:54:04 INFO Scope [single] 2019-05-21 18:54:05 INFO Inlining JS File [Chart.js] 2019-05-21 18:54:05 INFO Inlining JS File [Chart.js] 2019-05-21 18:54:05 INFO Creating HTML file [C:\\development\\isccr\\cont-code-review\\trunk\\FlowCodeChecker\\IsccrTestFq8a__CodeReviewReport__html-package.html] 2019-05-21 18:54:05 INFO ----------------------------------------------------------- 2019-05-21 18:54:05 INFO Name [junit] 2019-05-21 18:54:05 INFO Implementation [com.softwareag.gcs.wm.codereview.renderers.XSLRenderer] 2019-05-21 18:54:05 INFO Scope [all] 2019-05-21 18:54:05 INFO Inlining JS File [Chart.js] 2019-05-21 18:54:05 INFO Creating HTML file [C:\\development\\isccr\\cont-code-review\\trunk\\FlowCodeChecker\\IsccrTestFq8a__CodeReviewReport__junit.xml] 2019-05-21 18:54:05 INFO ----------------------------------------------------------- 2019-05-21 18:54:05 INFO Name [csv] 2019-05-21 18:54:05 INFO Implementation [com.softwareag.gcs.wm.codereview.renderers.CSVRenderer] 2019-05-21 18:54:05 INFO Scope [all] 2019-05-21 18:54:05 INFO Creating CSV file [C:\\development\\isccr\\cont-code-review\\trunk\\FlowCodeChecker\\IsccrTestFq8a__CodeReviewReport__csv.csv] 2019-05-21 18:54:05 INFO ------------------------------------------------------------------------- 2019-05-21 18:54:05 INFO Code review complete 2019-05-21 18:54:05 INFO Percentage of Passes (+) [100] 2019-05-21 18:54:05 INFO Percentage of Warnings (-) [0] of allowed [100] 2019-05-21 18:54:05 INFO Percentage of Failures (.) [0] of allowed [0] 2019-05-21 18:54:05 INFO 0% 25% 50% 75% 100% 2019-05-21 18:54:05 INFO | | | | | 2019-05-21 18:54:05 INFO |++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++| 2019-05-21 18:54:05 INFO ^ ^ 2019-05-21 18:54:05 INFO P W 2019-05-21 18:54:05 INFO CODE REVIEW STATUS - PASSED 2019-05-21 18:54:05 INFO ######## ### ###### ###### ######## ######## 2019-05-21 18:54:05 INFO ## ## ## ## ## ## ## ## ## ## ## 2019-05-21 18:54:05 INFO ## ## ## ## ## ## ## ## ## 2019-05-21 18:54:05 INFO ######## ## ## ###### ###### ###### ## ## 2019-05-21 18:54:05 INFO ## ######### ## ## ## ## ## 2019-05-21 18:54:05 INFO ## ## ## ## ## ## ## ## ## ## 2019-05-21 18:54:05 INFO ## ## ## ###### ###### ######## ######## 2019-05-21 18:54:05 INFO Completed Finally, browse and open the HTML and CSV reports provided in the directory from where the command was executed Linux Command Line Execution Single Package review For linux, a shell script exists named CodeReview.sh This can be executed using the same parameters as the windows version. Note that like the windows script, you may need to modify this shell script to update environment variables.","title":"Overview"},{"location":"index.html#overview","text":"Integration Server Continuous Code Review (ISCCR) has been developed by Software AG Global Consulting Services, and is provided through subscription license as a PERFORMANCE.READY tool. It's aim is to provide quality check processing for Integration Server developments, both as part of a continuous integration and local development approach with Integration Server. It checks and enables a development team to improve quality of your Integration Server services thereby assisting with readability, quality, standardizaton and ultimately minimising cost of change and reduces the maintenance burden. This tool has a large number of customisable review points covering: Quality issues Common Mistakes Coding standards Deprecated services plus many other service properties and coding issues.","title":"Overview"},{"location":"index.html#compatibility","text":"Integration Server Continuous Code review is tested and compatible with the following releases of Integration Server: webNethods v10.5 webMethods v10.4 webMethods v10.3 webMethods v10.2 webMethods v10.1 webMethods v10.0 webMethods v9.12 webMethods v9.10 webMethods v9.9 webMethods v9.8 webMethods v9.7 webMethods v9.6 webMethods v9.5 webMethods v9.0 webMethods v8.2 It has also been tested and is compatible with the following releases of the Microservices Runtime: webNethods v10.5 webMethods v10.4 webMethods v10.3 webMethods v10.2 webMethods v10.1 Compatibility is also confirmed for the webMethods Service Designer Release which uses the Microservices Runtime","title":"Compatibility"},{"location":"index.html#installation","text":"","title":"Installation"},{"location":"index.html#code-review-engine","text":"","title":"Code Review Engine"},{"location":"index.html#zip-file-extraction","text":"The ISCCR execution engine is distributed as a zip file and can simply be extracted into a location of your choosing (e.g. C:\\SoftwareAG\\tools\\CodeReview within the file system. The file system within the zip file must be maintained whilst extracting, and will create a file structure similar to:","title":"Zip File Extraction"},{"location":"index.html#license-file","text":"Following extraction, before execution you\u2019ll need to copy the code review engine licence file, renaming to license.txt into this directory, e.g.","title":"License File"},{"location":"index.html#editing-codereviewcmd","text":"If you intend to use the sample windows script provided, and in particular if you\u2019re running the code review from within a Continuous Integration tool such as Jenkins, this file will need modifying to including the full path to the location where the tool has been extracted, e.g. assuming you extract the file to: c:\\SoftwareAG\\tools\\ISCCR You'll need to modify the CodeReview.cmd updating the CODEREVIEW_HOME environment variable, replacing the . with the full path to the installation directory i.e, find and replace the command SET CODE_REVIEW_HOME=. and change the '.' to your installation directory, e.g. SET CODE_REVIEW_HOME=c:\\SoftwareAG\\tools\\ISCCR","title":"Editing CodeReview.cmd"},{"location":"index.html#setting-java_home","text":"It's also recommended to set the JAVA_HOME environment variable. The code review tool in windows will attempt to discover a suitable JVM to execute, however this should ideally be set teo the one distributed within webmethods, e.g.","title":"Setting JAVA_HOME"},{"location":"index.html#eclipse-plugin","text":"The eclipse plugin is distributed as a zip file that can de installed into your Software AG designer eclipse environment as follows: Stop any instances of Designer that are currently running Browse to the designer eclipse dropins folder within the Software AG installation, e.g. c:\\SoftwareAG\\Designer\\eclipse\\dropins Remove any previous ISCCR directory from the dropins location Create a directory in the dropins location named: ISCCR Unzip the eclipse plugin into the ISCCR directory This should create a file system structure as follows C:\\SoftwareAG\\Designer\\eclipse\\dropins\\ISCCRv4\\plugins\\ContinuousCodeReview_Plugin_x.x.x.x.jar Start Designer After a few minutes designer will start with the plugin installed Warning Please be patient \u2013 the installation will take a few minutes and designer may look like the process has hung. Do NOT kill the designer process otherwise the installation will fail and further installations will be blocked without creating a different base directory (not called ISCCR) within the dropins location.* On startup, enter the window/preferences settings as required, e.g: Configure by pointing to the installation of the code review engine, and to the packages root folder within the designer where the plugin is installed Additionally, add the prefixes of custom packages that you wish to be reviewed and any JVM Parameters. When finished press ok","title":"Eclipse Plugin"},{"location":"index.html#wxisccr-package","text":"Note This pacakge only exists to support the older Centralized (Non-Local Development) approach, and is otherwise not needed The WxISCCR package is provided as a zip, that can be imported into the Integration Server as any other package, through the install inbound pacakges functionality.","title":"WxISCCR Package"},{"location":"index.html#quick-start","text":"","title":"Quick Start"},{"location":"index.html#windows-command-line-execution","text":"","title":"Windows Command Line Execution"},{"location":"index.html#single-package-review","text":"After following the installation notes above, ISCCR can be run in windows to review single packages using the supplied command script by opening a command prompt, navigating to the extracted directory and supplying individual package details. The format of the command prompt is as follows: CodeReview.cmd -Dcode.review.directory=[LOCATION OF PACKAGES DIRECTORY] -Dcode.review.pkgname=[PACKAGE NAME] -Dcode.review.pkgprefix=[PACKAGE PREFIX LETTERS]","title":"Single Package Review"},{"location":"index.html#example","text":"Assuming a package named IotDemo CodeReview.cmd -Dcode.review.directory=c:\\softwareag\\IntegrationServer\\instances\\default\\packages -Dcode.review.pkgname=IotDemo -Dcode.review.pkgprefix=Iot The output of this command for a \"Passed test\" with \"INFO\" level logging will be similar to: 2019-05-21 18:54:03 INFO webMethods Integration Server Continuous Code Review 2019-05-21 18:54:03 INFO Software AG Global Consulting Services 2019-05-21 18:54:03 INFO Copyright (C)2018 Software AG. All rights reserved 2019-05-21 18:54:03 INFO Contact : GCS_tool_support@softwareag.com 2019-05-21 18:54:03 INFO Version : _VERSION_ 2019-05-21 18:54:03 INFO Build : _BUILD_ 2019-05-21 18:54:03 INFO Run Mode: INTERACTIVE 2019-05-21 18:54:03 INFO ------------------------------------------------------------------------- 2019-05-21 18:54:03 INFO Exec Directory [C:/development/isccr/cont-code-review/trunk/FlowCodeChecker/bin/] 2019-05-21 18:54:03 INFO Loading Default Configuration Options File 2019-05-21 18:54:03 INFO Options File [*/config.xml] 2019-05-21 18:54:04 INFO Custom Options [*\\IsccrTestFq8a\\\\config\\codereview.xml] exists within package - Loading and merging with settings] 2019-05-21 18:54:04 INFO Custom Options [*] provided. Loading and merging with defaults 2019-05-21 18:54:04 INFO Code Directory [*\\IsccrTestFq8a\\] 2019-05-21 18:54:04 INFO Report Directory [] 2019-05-21 18:54:04 INFO Run Mode [INTERACTIVE] 2019-05-21 18:54:04 INFO webMethods Vers [10.4] 2019-05-21 18:54:04 INFO ------------------------ LICENCE DETAILS ------------------------ 2019-05-21 18:54:04 INFO Using License file : ************************** 2019-05-21 18:54:04 INFO Licensed to : ************************** 2019-05-21 18:54:04 INFO Serial Number: : ************************** 2019-05-21 18:54:04 INFO License Comments : ************************** 2019-05-21 18:54:04 INFO Licence Checked and is valid 2019-05-21 18:54:04 INFO Package Name [IsccrTestFq8a] 2019-05-21 18:54:04 INFO EXECUTING OPERATIONS 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [SP1] 2019-05-21 18:54:04 INFO Rule Index [1] 2019-05-21 18:54:04 INFO Name [Stateless] 2019-05-21 18:54:04 INFO Description [Services should be stateless to avoid creating session state where not needed. Each session consumes resources on the IS, consumes memory, creates a database entry, and in a clustered environment needs to be synchronized between cluster nodes. To minimize the build-up of unnecessary sessions it is recommended to ensure stateless services are used where possible. This can be changed on the 'stateless' flow property within Designer by setting the value to yes. The table below highlights all services in the package which are currently configured as stateless] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.ServiceProperties] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [SP2] 2019-05-21 18:54:04 INFO Rule Index [2] 2019-05-21 18:54:04 INFO Name [Pipeline Save Restore] 2019-05-21 18:54:04 INFO Description [No Save/Restore Pipeline options should be set against the service. The Save/Restore pipeline options where set can result in unnecessary I/O and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised. It is recommended to remote these options from the services before deployment to a non-development environment, or use the extended property (watt.server.pipeline.processor) to disable these in the non-development environments. Where this is the case, this rule can be ignored] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.ServiceProperties] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ1] 2019-05-21 18:54:04 INFO Rule Index [3] 2019-05-21 18:54:04 INFO Name [Pipeline Services] 2019-05-21 18:54:04 INFO Description [No Save/Restore/Trace Pipieline services should exist within the flow service. Save/Restore pipeline services result in unnecessary I/O and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised. It is recommended to delete these from the services before deployment to a non-development environment to ensure maximum performance. Alternative to this is to use the pipeline service options from within designer and disable these in the non-development environments as described in the previous check.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.ServiceUsageChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ2] 2019-05-21 18:54:04 INFO Rule Index [4] 2019-05-21 18:54:04 INFO Name [Clear Pipeline] 2019-05-21 18:54:04 INFO Description [The ClearPipeline service should not be used as pipeline variables should be dropped immediately as soon as they are no longer required. ClearPipeline leads to unnecessary overhead at the pipeline is walked to determine whether to preserve or drop variables, and can have significant impact on performance when a large pipeline is present. It is recommended to delete these services from the flow and drop variables once they are no longer needed.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.ServiceUsageChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ3] 2019-05-21 18:54:04 INFO Rule Index [5] 2019-05-21 18:54:04 INFO Name [Deprecated Services] 2019-05-21 18:54:04 INFO Description [Use of deprecated services is not recommended as these will be dropped from the product in a future release. Please refer to the built-in-services-guide for replacements to any deprecated services discovered to be in use and modify the flow to remove the deprecated service and update with the recommended alternative.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.ServiceUsageChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ4] 2019-05-21 18:54:04 INFO Rule Index [6] 2019-05-21 18:54:04 INFO Name [Disabled Services] 2019-05-21 18:54:04 INFO Description [services should be removed to avoid performance issues as the flow is interpreted during execution. This also results in smaller, more maintainable flow services which result in a better understanding and lower cost of maintenance. Recommendation is to delete rather than disable any code no longer needed.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ5] 2019-05-21 18:54:04 INFO Rule Index [7] 2019-05-21 18:54:04 INFO Name [Use of Pub.Storage] 2019-05-21 18:54:04 INFO Description [pub.storage services should not be used due to performance issues. The pub.storage services have an implicit locking model and are not intended to be a high performance all-purpose database. Where pub.storage services have been used, it is recommended to re-architect these, particularly in high-throughput scenarios.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.ServiceUsageChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ6] 2019-05-21 18:54:04 INFO Rule Index [8] 2019-05-21 18:54:04 INFO Name [Debug Log] 2019-05-21 18:54:04 INFO Description [Debug Log services should be removed to avoid performance issues during execution. Where logging is required, the recommendation is to implement a more general purpose and configurable logging framework to help keep you logs more manageable and separate from product logging] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.ServiceUsageChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ7] 2019-05-21 18:54:04 INFO Rule Index [9] 2019-05-21 18:54:04 INFO Name [Public Services Try/Catch] 2019-05-21 18:54:04 INFO Description [Public services must have a try catch within them to ensure graceful handling of error conditions when these occur. Public services (or top level services) need to decide how to retry or return the error condition to the consuming application. Recommendation is to use Sequence nodes to wrap the execution of the public service within a try/catch block and use the catch to handle the error condition. Try/catch can be achieved with sequence nodes by having a top level sequence with the exit on value set to \"SUCCESS\" and 2 inner sequences, the try, with the exit on value set to \"FAILURE\" and the catch, with the exit on value set to \"DONE\". It is also recommended to add comments to these sequences to aid understanding so that a developer can identify these are for try/catch usage. ] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FilteredFlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ8] 2019-05-21 18:54:04 INFO Rule Index [10] 2019-05-21 18:54:04 INFO Name [Connections Package] 2019-05-21 18:54:04 INFO Description [All JDBC Adapter connections should be in separate packages, that is a package should not contain connections mixed in with other assets. This aids deployment of services as this means changes to packages can be deployed without unnecessarily affecting the JDBC Adapter database connections. Recommendation is to have adapter connections in packages on their own, and not mix these types.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.ConnectionsChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ9] 2019-05-21 18:54:04 INFO Rule Index [11] 2019-05-21 18:54:04 INFO Name [FTP Timeout] 2019-05-21 18:54:04 INFO Description [Ensure timeout is specified on FTP services. If no timeout is specified on FTP services, the default timeout value is unlimited, meaning there is a possibility of consuming threads on the Integration Server for a long period of time, especially in the scenario where the FTP server isn't available. Recommendation is to add a timeout value to the invocation where these services are used.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ10] 2019-05-21 18:54:04 INFO Rule Index [12] 2019-05-21 18:54:04 INFO Name [Service invoke comments] 2019-05-21 18:54:04 INFO Description [Comments should be provided for each service that is invoked from the main service. This helps to improve code readability and maintainability to help reduce cost of change. Every service invoke should have a comment value set.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [true] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ11] 2019-05-21 18:54:04 INFO Rule Index [13] 2019-05-21 18:54:04 INFO Name [Sequence comments] 2019-05-21 18:54:04 INFO Description [Comments should be provided for each sequence node that is used. This helps to improve code readability and maintainability to help reduce cost of change. Every sequence node should have a comment value set.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [true] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ12] 2019-05-21 18:54:04 INFO Rule Index [14] 2019-05-21 18:54:04 INFO Name [Unauthorised Access/Orphaned] 2019-05-21 18:54:04 INFO Description [All services within this package should be invoked through a public service. This rule Identifies any assets within the package that are not used directly or indirectly from a public flow service or DSP file contained within this package, and therefore are either not used, or are called from outside the package breaking the public/private access principle.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.OrphanedChecker] 2019-05-21 18:54:04 INFO Ignore Failure [true] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ13] 2019-05-21 18:54:04 INFO Rule Index [15] 2019-05-21 18:54:04 INFO Name [Branch without switch or evaluate labels] 2019-05-21 18:54:04 INFO Description [The BRANCH step selects and executes a child step based on the value of one or more variables in the pipeline. You indicate the variables you want to branch on by specifying a switch value or by writing an expression that includes the variables, therefore a branch must have either a switch value or have evaluate labels set to true.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ14] 2019-05-21 18:54:04 INFO Rule Index [16] 2019-05-21 18:54:04 INFO Name [Branch on expression when child step is without specified label or $null] 2019-05-21 18:54:04 INFO Description [If you branch on expressions (Evaluate labels is set to True), you cannot branch on null or empty values. When executing the BRANCH step and evaluating labels, Integration Server ignores target steps with a blank or set to $null label.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ15] 2019-05-21 18:54:04 INFO Rule Index [17] 2019-05-21 18:54:04 INFO Name [Exit Node From Specification] 2019-05-21 18:54:04 INFO Description [The EXIT step exits the entire flow service or a single flow step. Specifically, it may exit from the nearest ancestor loop step, a specified ancestor step, the parent step, or the entire flow service. An exit 'From' value is required to determine where to exit from] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ16] 2019-05-21 18:54:04 INFO Rule Index [18] 2019-05-21 18:54:04 INFO Name [Branch step must have child nodes] 2019-05-21 18:54:04 INFO Description [A Branch step in a flow service must have a child node for it to be relevant. If a branch step has no child nodes it should be deleted] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ17] 2019-05-21 18:54:04 INFO Rule Index [19] 2019-05-21 18:54:04 INFO Name [Loop step must have child nodes] 2019-05-21 18:54:04 INFO Description [A Loop step in a flow service must have a child node for it to be relevant. If a loop step has no child nodes it should be deleted] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ18] 2019-05-21 18:54:04 INFO Rule Index [20] 2019-05-21 18:54:04 INFO Name [Repeat step must have child nodes] 2019-05-21 18:54:04 INFO Description [A Repeat step in a flow service must have a child node for it to be relevant. If a repeat step has no child nodes it should be deleted] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ19] 2019-05-21 18:54:04 INFO Rule Index [21] 2019-05-21 18:54:04 INFO Name [Sequence step must have child nodes] 2019-05-21 18:54:04 INFO Description [A Sequence step in a flow service must have a child node for it to be relevant. If a sequence step has no child nodes it should be deleted] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ20] 2019-05-21 18:54:04 INFO Rule Index [22] 2019-05-21 18:54:04 INFO Name [Map steps must have mapped fields] 2019-05-21 18:54:04 INFO Description [A Map step in a flow service must have mapped fields. If a map step has no mapped fields it should be deleted] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ21] 2019-05-21 18:54:04 INFO Rule Index [23] 2019-05-21 18:54:04 INFO Name [Loop must have an input array provided] 2019-05-21 18:54:04 INFO Description [A loop step must have an input array variable provided] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ22] 2019-05-21 18:54:04 INFO Rule Index [24] 2019-05-21 18:54:04 INFO Name [Flow service should not be empty] 2019-05-21 18:54:04 INFO Description [A flow service should contain implementation, otherwise it should be removed from the package] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ23] 2019-05-21 18:54:04 INFO Rule Index [25] 2019-05-21 18:54:04 INFO Name [Try step must have child nodes] 2019-05-21 18:54:04 INFO Description [A try step in a flow service must have a child node for it to be relevant. If a try step has no child nodes it should be deleted] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ24] 2019-05-21 18:54:04 INFO Rule Index [26] 2019-05-21 18:54:04 INFO Name [Catch step must have child nodes] 2019-05-21 18:54:04 INFO Description [A catch step in a flow service must have a child node for it to be relevant. If a catch step has no child nodes it should be deleted] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [FQ25] 2019-05-21 18:54:04 INFO Rule Index [27] 2019-05-21 18:54:04 INFO Name [Finally step must have child nodes] 2019-05-21 18:54:04 INFO Description [A finally step in a flow service must have a child node for it to be relevant. If a finally step has no child nodes it should be deleted] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS1] 2019-05-21 18:54:04 INFO Rule Index [28] 2019-05-21 18:54:04 INFO Name [Root Folder Name] 2019-05-21 18:54:04 INFO Description [Root Folder should not be the same as the package as this can cause namespace issues should the code need to be refactored or moved to other packages for promotion to common services, inhibiting reusability. Recommendation is to set a separate prefix folder structure from the package and use this across all packages differentiating below the prefix. This can be one or two levels deep (but ideally should be no more) and commonly is the inverse domain name of the organisation, e.g. \"com.softwareag\"] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS2] 2019-05-21 18:54:04 INFO Rule Index [29] 2019-05-21 18:54:04 INFO Name [Folder Name] 2019-05-21 18:54:04 INFO Description [Folders should only contain lower case ascii characters and digits. In certain scenarios, use of the underscore character '_' is allowed but should be avoided where possible.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS3] 2019-05-21 18:54:04 INFO Rule Index [30] 2019-05-21 18:54:04 INFO Name [Folder Prefix] 2019-05-21 18:54:04 INFO Description [Ensure that all assets exist within the specified prefix folders. Recommendation is to set a separate prefix folder structure from the package and use this across all packages differentiating below the prefix. This can be one or two levels deep (but ideally should be no more) and commonly is the inverse domain name of the organisation, e.g. \"com.softwareag\".] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS4] 2019-05-21 18:54:04 INFO Rule Index [31] 2019-05-21 18:54:04 INFO Name [Package Name] 2019-05-21 18:54:04 INFO Description [Ensure the package prefix has been specified and package name conforms to standards. <br/>1. The package name should not end with the word \"Package\" or \"Pkg\". <br/>2. Package names must not be prefixed with \"Wm\". These usually represent packages distributed by webMethods. <br/>3. Packages should start with an uppercase character and only contain alpha numeric character plus the underscore when absolutely required.. <br/>4. Package Name should start with your provided prefix. A package prefix aids identification of packages created by the organisation.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS5] 2019-05-21 18:54:04 INFO Rule Index [32] 2019-05-21 18:54:04 INFO Name [Service Name] 2019-05-21 18:54:04 INFO Description [Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST services)] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS6] 2019-05-21 18:54:04 INFO Rule Index [33] 2019-05-21 18:54:04 INFO Name [Document Name] 2019-05-21 18:54:04 INFO Description [Ensure Document definition names conform to naming standards. A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary. Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS7] 2019-05-21 18:54:04 INFO Rule Index [34] 2019-05-21 18:54:04 INFO Name [Schema Name] 2019-05-21 18:54:04 INFO Description [Ensure Schemas definitions conform to naming standards. A schema must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS8] 2019-05-21 18:54:04 INFO Rule Index [35] 2019-05-21 18:54:04 INFO Name [FlatFile Name] 2019-05-21 18:54:04 INFO Description [Ensure Flat File Dictionaries and Schema definitions conform to naming standards. They must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS9] 2019-05-21 18:54:04 INFO Rule Index [36] 2019-05-21 18:54:04 INFO Name [Blaze Name] 2019-05-21 18:54:04 INFO Description [Ensure Blaze Rules Conform to the Naming Standards. Blaze rule service names must only contain alpha numeric characters and the underscore when absolutely necessary.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS10] 2019-05-21 18:54:04 INFO Rule Index [37] 2019-05-21 18:54:04 INFO Name [XSL Name] 2019-05-21 18:54:04 INFO Description [Ensure XSL Services Conform to the Naming Standards. XSL service names must start with a lower case letter, should be camel case, and contain only alpha numeric characters] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS11] 2019-05-21 18:54:04 INFO Rule Index [38] 2019-05-21 18:54:04 INFO Name [Adapter Name] 2019-05-21 18:54:04 INFO Description [Ensure Adapter Services Conform to the Naming Standards. Adapter service names must start with a lower case letter, should be camel case, and contain only alpha numeric characters] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS12] 2019-05-21 18:54:04 INFO Rule Index [39] 2019-05-21 18:54:04 INFO Name [Trigger Name] 2019-05-21 18:54:04 INFO Description [Ensure Triggers Conform to the Naming Standards. Trigger names must start with a lower case letter, should be camel case, and contain only alpha numeric characters] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS13] 2019-05-21 18:54:04 INFO Rule Index [40] 2019-05-21 18:54:04 INFO Name [WSD Name] 2019-05-21 18:54:04 INFO Description [Ensure WSDs Conform to the Naming Standards. WSD names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS14] 2019-05-21 18:54:04 INFO Rule Index [41] 2019-05-21 18:54:04 INFO Name [Connection Name] 2019-05-21 18:54:04 INFO Description [Ensure Connections Conform to the Naming Standards. Connection names must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS15] 2019-05-21 18:54:04 INFO Rule Index [42] 2019-05-21 18:54:04 INFO Name [Document variable name] 2019-05-21 18:54:04 INFO Description [Ensure variable names within document defintions conform to the naming standards. Variable names in document definitions must start with a lower case letter, should be camel case, and contain only alpha numeric characters. Caters for documents generated from XSDs where the document name may contain namespace prefix and use of underscore and hyphen present] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.DocumentChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS16] 2019-05-21 18:54:04 INFO Rule Index [43] 2019-05-21 18:54:04 INFO Name [Service Signature Name] 2019-05-21 18:54:04 INFO Description [Ensure Input/Output variables in service signatures conform to the naming standards. Variable names in service signatures must start with a lower case letter, should be camel case, and contain only alpha numeric characters] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.FlowSignatureChecker] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS17] 2019-05-21 18:54:04 INFO Rule Index [44] 2019-05-21 18:54:04 INFO Name [REST Resource Name] 2019-05-21 18:54:04 INFO Description [Ensure REST Resouces Conform to the Naming Standards. REST resource names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [NS18] 2019-05-21 18:54:04 INFO Rule Index [45] 2019-05-21 18:54:04 INFO Name [REST Descriptor Name] 2019-05-21 18:54:04 INFO Description [Ensure REST Descriptors conform to the Naming Standards. REST descriptor names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Rule Id [MS1] 2019-05-21 18:54:04 INFO Rule Index [46] 2019-05-21 18:54:04 INFO Name [Non-Production Service Package Suffixes] 2019-05-21 18:54:04 INFO Description [Ensure packages with specified suffixes are not deployed to production. This is to ensure that test packages (*_TEST), stub packages (*_STUB) and development packages (*_DEV) are not deployed incorrectly into production class environments.] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards] 2019-05-21 18:54:04 INFO Ignore Failure [false] 2019-05-21 18:54:04 INFO OPERATIONS EXECUTION COMPLETE (in 233ms) 2019-05-21 18:54:04 INFO EXECUTING [PACKAGE SCOPED] SENSORS 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Sensor Id [1] 2019-05-21 18:54:04 INFO Name [totals] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.sensors.TotalsSensor] 2019-05-21 18:54:04 INFO Scope [package] 2019-05-21 18:54:04 INFO Decorator Name [FlowTotals] 2019-05-21 18:54:04 INFO Decorator Impl [com.softwareag.gcs.wm.codereview.decorators.SummaryTotals] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Sensor Id [2] 2019-05-21 18:54:04 INFO Name [CodeLines] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.sensors.CodeLines] 2019-05-21 18:54:04 INFO Scope [package] 2019-05-21 18:54:04 INFO Decorator Name [FlowComplexity] 2019-05-21 18:54:04 INFO Decorator Impl [com.softwareag.gcs.wm.codereview.decorators.FlowComplexity] 2019-05-21 18:54:04 INFO Decorator Name [FlowTotals] 2019-05-21 18:54:04 INFO Decorator Impl [com.softwareag.gcs.wm.codereview.decorators.FlowTotals] 2019-05-21 18:54:04 INFO EXECUTING OUTPUT RENDERERS 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Name [CodeReviewResultsXml] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.renderers.XMLRenderer] 2019-05-21 18:54:04 INFO Scope [all] 2019-05-21 18:54:04 INFO Creating XML file [C:\\development\\isccr\\cont-code-review\\trunk\\FlowCodeChecker\\IsccrTestFq8a__CodeReviewReport__CodeReviewResultsXml.xml] 2019-05-21 18:54:04 INFO ----------------------------------------------------------- 2019-05-21 18:54:04 INFO Name [html-package] 2019-05-21 18:54:04 INFO Implementation [com.softwareag.gcs.wm.codereview.renderers.XSLRenderer] 2019-05-21 18:54:04 INFO Scope [single] 2019-05-21 18:54:05 INFO Inlining JS File [Chart.js] 2019-05-21 18:54:05 INFO Inlining JS File [Chart.js] 2019-05-21 18:54:05 INFO Creating HTML file [C:\\development\\isccr\\cont-code-review\\trunk\\FlowCodeChecker\\IsccrTestFq8a__CodeReviewReport__html-package.html] 2019-05-21 18:54:05 INFO ----------------------------------------------------------- 2019-05-21 18:54:05 INFO Name [junit] 2019-05-21 18:54:05 INFO Implementation [com.softwareag.gcs.wm.codereview.renderers.XSLRenderer] 2019-05-21 18:54:05 INFO Scope [all] 2019-05-21 18:54:05 INFO Inlining JS File [Chart.js] 2019-05-21 18:54:05 INFO Creating HTML file [C:\\development\\isccr\\cont-code-review\\trunk\\FlowCodeChecker\\IsccrTestFq8a__CodeReviewReport__junit.xml] 2019-05-21 18:54:05 INFO ----------------------------------------------------------- 2019-05-21 18:54:05 INFO Name [csv] 2019-05-21 18:54:05 INFO Implementation [com.softwareag.gcs.wm.codereview.renderers.CSVRenderer] 2019-05-21 18:54:05 INFO Scope [all] 2019-05-21 18:54:05 INFO Creating CSV file [C:\\development\\isccr\\cont-code-review\\trunk\\FlowCodeChecker\\IsccrTestFq8a__CodeReviewReport__csv.csv] 2019-05-21 18:54:05 INFO ------------------------------------------------------------------------- 2019-05-21 18:54:05 INFO Code review complete 2019-05-21 18:54:05 INFO Percentage of Passes (+) [100] 2019-05-21 18:54:05 INFO Percentage of Warnings (-) [0] of allowed [100] 2019-05-21 18:54:05 INFO Percentage of Failures (.) [0] of allowed [0] 2019-05-21 18:54:05 INFO 0% 25% 50% 75% 100% 2019-05-21 18:54:05 INFO | | | | | 2019-05-21 18:54:05 INFO |++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++| 2019-05-21 18:54:05 INFO ^ ^ 2019-05-21 18:54:05 INFO P W 2019-05-21 18:54:05 INFO CODE REVIEW STATUS - PASSED 2019-05-21 18:54:05 INFO ######## ### ###### ###### ######## ######## 2019-05-21 18:54:05 INFO ## ## ## ## ## ## ## ## ## ## ## 2019-05-21 18:54:05 INFO ## ## ## ## ## ## ## ## ## 2019-05-21 18:54:05 INFO ######## ## ## ###### ###### ###### ## ## 2019-05-21 18:54:05 INFO ## ######### ## ## ## ## ## 2019-05-21 18:54:05 INFO ## ## ## ## ## ## ## ## ## ## 2019-05-21 18:54:05 INFO ## ## ## ###### ###### ######## ######## 2019-05-21 18:54:05 INFO Completed Finally, browse and open the HTML and CSV reports provided in the directory from where the command was executed","title":"Example"},{"location":"index.html#linux-command-line-execution","text":"","title":"Linux Command Line Execution"},{"location":"index.html#single-package-review_1","text":"For linux, a shell script exists named CodeReview.sh This can be executed using the same parameters as the windows version. Note that like the windows script, you may need to modify this shell script to update environment variables.","title":"Single Package review"},{"location":"About/License.html","text":"License Integration Server Continuous Code Review PERFORMANCE.READY TOOLS Software AG Global Consulting Services PART A: GENERAL TERMS You are not allowed to install or use the Product without a corresponding license agreement. If you have entered into a commercial license agreement with one of Software AG's subsidiaries or distributors (\"Commercial License Agreement\") the installation and use of the Product is subject to your acceptance of additional terms which are provided in your agreement COPYRIGHT AND TRADEMARK NOTICE The name Software AG and all Software AG product names are either trademarks registered trademarks of Software AG and/or Software AG USA Inc. and/or its subsidiaries and/or its affiliates and/or their licensors. Other company and product names mentioned herein may be trademarks of their respective owners Software AG or its subsidiaries are the sole owner of all intellectual property rights to the Products and accompanying user documentation or have the respective distribution rights. References made in or on the Products to the copyright and/or to the industrial property rights must not be altered, deleted or obliterated in any manner. No right, title or interest in any trademark or trade names of Software AG or its subsidiaries or its licensors is granted hereunder. (c) Copyright 2018 Software AG, Darmstadt, Germany and/or Software AG USA Inc., Reston, VA, USA and/or its subsidiaries and/or its affiliates and/or their licensors. PART B: ADDITIONAL TERMS COMMERCIAL LICENSE The Commercial License Agreement does not grant you the right to sublicense, rent, assign or lease the software, in whole or in part, and you may not decompile, disassemble, modify, decrypt, extract or otherwise reverse engineer, or make further copies of the software, except as explicitly permitted by the Commercial License Agreement. The software is designed for general office use. It is not designed or intended for use in air traffic control, mass transit systems, critical medical purposes, the operation of nuclear facilities or any other use which could result in a high risk of safety or property damage. You warrant that you will not use the software for such purposes. You may not download or otherwise export or re-export any underlying software, technology or other information from the Products except as stated explicitly in this notice or the Commercial License Agreement and in full compliance with all applicable national and international laws and regulations. You agree to indemnify and hold harmless and defend Software AG against any and all liability arising from or relating to your breach of these export control undertakings. Software AG reserves the right not to honor any affected parts of this notice, or the Commercial License Agreement, in case any national or international export regulations or foreign trade legislation, or any target country / customer / usage restrictions implied by embargos or other sanctions prohibit the provision of export controlled goods (Dual-Use items) and services to be granted to you under either this notice or the Commercial License Agreement. Software AG may inform you if a related official export approval by national or international export control authorities is required. Provision of affected Products will then be postponed until all such required approvals have been granted. The provision of Products not restricted by the above mentioned export prohibitions will remain unaffected of this restriction. PART C: NOT APPLICABLE PART D: SOFTWARE AG EVALUATION LICENSE AGREEMENT FOR TRIAL VERSIONS OF SOFTWARE AG PRODUCT ONLY IMPORTANT: PLEASE READ THIS SOFTWARE AG EVALUATION LICENSE AGREEMENT CAREFULLY BEFORE INSTALLING THE PRODUCT! THE TERMS OF THIS EVALUATION LICENSE AGREEMENT APPLY ONLY IF YOU HAVE NOT ALREADY EXECUTED A COMMERCIAL LICENSE AGREEMENT FOR THE PRODUCT WITH A SOFTWARE AG SUBSIDIARY OR DISTRIBUTOR. EVALUATION LICENSE AGREEMENT FOR TRIAL VERSION By installing the Product, you, as licensee, are entering into an agreement with Software AG, as licensor, with GENERAL TERMS as defined in Part A, as well as with terms set forth below (Part D). In case of conflicting terms between Part A and D, the terms of this Part D shall apply (\"Evaluation) License Agreement\"). If you do not agree to the terms of this agreement, you must immediately, and in any case before installation, destroy the Product and all copies of the Product in physical, electronic or other form. THE LICENSE With this Evaluation License Agreement, Software AG grants you - free of charge - a non-exclusive license to use the Product and accompanying documentation on a single computer, on a workstation or on a single terminal within a network for evaluation and testing purposes for a time period defined below (see section License Validity). In no event may the Product be deployed or used for any commercial production purpose such as developing new applications or testing, supporting, maintaining, or reengineering of existing applications, unless you acquire a commercial license from Software AG and pay the applicable license fees. You may not pass on copies of the Product to any third party or transfer the Product by electronic means to other computers via a network. For multi-user hardware systems or networks, a separate license is required for each user or each workstation. You have the right to make one copy of the Product solely for archival and backup purposes. You may not decompile, disassemble, modify, decrypt, extract or otherwise reverse engineer, or make further copies of the Product or parts thereof. This Evaluation License Agreement, with the downloaded or otherwise provided and used authorization key, is proof of your entering into this agreement and you must retain it. This Evaluation License Agreement does not grant you the right to sublicense, transfer, rent, assign or lease the Product, in whole or in part. THIRD PARTY RESTRICTIONS The Software may contain or include software applications for which the Licensor itself had to acquire a license to use from a third party (\"Third Party Applications\"). These Third Party Applications may be subject to additional license terms (\"Third Party Terms\"), which are available under the web address http://documentation.softwareag.com/legal/thirdparty.htm. The third party shall be entitled - only in relation to the respective third-party software - to exercise the rights of Licensor under this Evaluation License Agreement as a third party beneficiary directly against the licensee. You may not use or distribute these third party applications or its APIs on a stand-alone basis without the Product nor attempt to alter or modify it. LICENSE VALIDITY This Evaluation License Agreement is limited to a period as defined in the license key file. The license might limit your use of the Product to certain features, platforms or restrictions in capacity or other limitations incorporated by default, by license key file. You accept these limitations and will in no event bypass these. COPYRIGHT Software AG or its affiliates are the sole owner of the industrial property rights and copyright to the Product and accompanying user documentation or have the respective distribution rights. References made in or on the Product to the copyright or to other industrial property rights must not be altered, deleted or obliterated in any manner. CONFIDENTIALITY The Product is confidential and proprietary information of Software AG and its licensors, and may not be disclosed to third parties. You shall use such information only for the purpose of exercising the Evaluation License Agreement to the Product and shall disclose confidential and proprietary information only to your employees who require such information for the purpose stated above. You agree to take adequate steps to protect the Product from unauthorized disclosure or use. LIMITED WARRANTY The Product is provided \"as is\" without any warranty whatsoever. You assume full responsibility for the selection of the Product to achieve your intended results and for the installation, use and results obtained from the Product. Any kind of support for the Software AG Product is explicitly excluded. UPDATES AND MAINTENANCE This Evaluation License Agreement does not grant you any right to, license for or interest in any improvements, modifications, enhancements or updates to the Product and documentation or other support services. Such services are typically available under a Commercial License Agreement only. Any such arrangements shall be the subject of a separate written agreement. LIMITATION OF LIABILITY Except where there is a mandatory statutory liability for intent, gross negligence or injury to life, body or health, under no circumstances shall Software AG or its licensors be liable for any damages whatsoever (including, without limitation, damages for loss of business profits, work stoppage, loss of data or other financial loss) arising from the use of, or inability to use, this Product. In no event shall any liability of Software AG arising out of this agreement exceed the amount paid, if any, by you to Software AG hereunder. TERMINATION This Evaluation License Agreement will terminate immediately without notice from Software AG if you fail to comply with any provision of this Evaluation License Agreement. Software AG reserves the right to terminate this agreement immediately for good cause, whereby good cause is understood as any gross breach of this agreement. Upon termination, you must immediately discontinue the use of the Product and destroy the Product and all copies of the Product in physical, electronic or other form. Upon request of Software AG licensee will certify in written that use is discontinued and all copies of the Product are destroyed. EXPORT You may not download or otherwise export or re-export any underlying software, technology or other information from the Products except as stated explicitly in this notice or the Commercial License Agreement and in full compliance with all applicable national and international laws and regulations. You agree to indemnify and hold harmless and defend Software AG against any and all liability arising from or relating to your breach of these export control undertakings. Software AG reserves the right not to honor any affected parts of this notice, or the Commercial License Agreement, in case any national or international export regulations or foreign trade legislation, or any target country / customer / usage restrictions implied by embargos or other sanctions prohibit the provision of export controlled goods (Dual-Use items) and services to be granted to you under either this notice or the Commercial License Agreement. Software AG may inform you if a related official export approval by national or international export control authorities is required. Provision of affected Products will then be postponed until all such required approvals have been granted. The provision of Products not restricted by the above mentioned export prohibitions will remain unaffected of this restriction. MISCELLANEOUS The Product is designed for general office use. It is not designed or intended for use in air traffic control, mass transit systems, critical medical purposes, the operation of nuclear facilities or any other use which could result in a high risk of safety or property damage. You warrant that you will not use the Product for such purposes. The invalidity of any provision of this agreement shall not affect any other part of this agreement. This agreement represents the complete and exclusive statement concerning this Evaluation License Agreement between the parties. No modification or amendment of this agreement will be binding on any party unless acknowledged in writing by their duly authorized representatives. This agreement shall be governed and construed by the laws of the Federal Republic of Germany. Included Projects Themes used under license from the ReadTheDocs projects. ReadTheDocs theme - View license . Many thanks to the authors and contributors of those wonderful projects. MkDocs License (BSD) Copyright \u00a9 2014, Tom Christie. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentatio and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. ChartJS.org (MIT) The MIT License (MIT) - View license . Copyright (c) 2018 Chart.js Contributors Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Google Charts (Creative Commons Attribution) Terms of use Creative Commons Attribution 3.0 License","title":"License"},{"location":"About/License.html#license","text":"Integration Server Continuous Code Review PERFORMANCE.READY TOOLS Software AG Global Consulting Services","title":"License"},{"location":"About/License.html#part-a-general-terms","text":"You are not allowed to install or use the Product without a corresponding license agreement. If you have entered into a commercial license agreement with one of Software AG's subsidiaries or distributors (\"Commercial License Agreement\") the installation and use of the Product is subject to your acceptance of additional terms which are provided in your agreement COPYRIGHT AND TRADEMARK NOTICE The name Software AG and all Software AG product names are either trademarks registered trademarks of Software AG and/or Software AG USA Inc. and/or its subsidiaries and/or its affiliates and/or their licensors. Other company and product names mentioned herein may be trademarks of their respective owners Software AG or its subsidiaries are the sole owner of all intellectual property rights to the Products and accompanying user documentation or have the respective distribution rights. References made in or on the Products to the copyright and/or to the industrial property rights must not be altered, deleted or obliterated in any manner. No right, title or interest in any trademark or trade names of Software AG or its subsidiaries or its licensors is granted hereunder. (c) Copyright 2018 Software AG, Darmstadt, Germany and/or Software AG USA Inc., Reston, VA, USA and/or its subsidiaries and/or its affiliates and/or their licensors.","title":"PART A: GENERAL TERMS"},{"location":"About/License.html#part-b-additional-terms-commercial-license","text":"The Commercial License Agreement does not grant you the right to sublicense, rent, assign or lease the software, in whole or in part, and you may not decompile, disassemble, modify, decrypt, extract or otherwise reverse engineer, or make further copies of the software, except as explicitly permitted by the Commercial License Agreement. The software is designed for general office use. It is not designed or intended for use in air traffic control, mass transit systems, critical medical purposes, the operation of nuclear facilities or any other use which could result in a high risk of safety or property damage. You warrant that you will not use the software for such purposes. You may not download or otherwise export or re-export any underlying software, technology or other information from the Products except as stated explicitly in this notice or the Commercial License Agreement and in full compliance with all applicable national and international laws and regulations. You agree to indemnify and hold harmless and defend Software AG against any and all liability arising from or relating to your breach of these export control undertakings. Software AG reserves the right not to honor any affected parts of this notice, or the Commercial License Agreement, in case any national or international export regulations or foreign trade legislation, or any target country / customer / usage restrictions implied by embargos or other sanctions prohibit the provision of export controlled goods (Dual-Use items) and services to be granted to you under either this notice or the Commercial License Agreement. Software AG may inform you if a related official export approval by national or international export control authorities is required. Provision of affected Products will then be postponed until all such required approvals have been granted. The provision of Products not restricted by the above mentioned export prohibitions will remain unaffected of this restriction.","title":"PART B: ADDITIONAL TERMS COMMERCIAL LICENSE"},{"location":"About/License.html#part-c-not-applicable","text":"","title":"PART C: NOT APPLICABLE"},{"location":"About/License.html#part-d-software-ag-evaluation-license-agreement-for-trial-versions-of-software-ag-product-only","text":"IMPORTANT: PLEASE READ THIS SOFTWARE AG EVALUATION LICENSE AGREEMENT CAREFULLY BEFORE INSTALLING THE PRODUCT! THE TERMS OF THIS EVALUATION LICENSE AGREEMENT APPLY ONLY IF YOU HAVE NOT ALREADY EXECUTED A COMMERCIAL LICENSE AGREEMENT FOR THE PRODUCT WITH A SOFTWARE AG SUBSIDIARY OR DISTRIBUTOR. EVALUATION LICENSE AGREEMENT FOR TRIAL VERSION By installing the Product, you, as licensee, are entering into an agreement with Software AG, as licensor, with GENERAL TERMS as defined in Part A, as well as with terms set forth below (Part D). In case of conflicting terms between Part A and D, the terms of this Part D shall apply (\"Evaluation) License Agreement\"). If you do not agree to the terms of this agreement, you must immediately, and in any case before installation, destroy the Product and all copies of the Product in physical, electronic or other form. THE LICENSE With this Evaluation License Agreement, Software AG grants you - free of charge - a non-exclusive license to use the Product and accompanying documentation on a single computer, on a workstation or on a single terminal within a network for evaluation and testing purposes for a time period defined below (see section License Validity). In no event may the Product be deployed or used for any commercial production purpose such as developing new applications or testing, supporting, maintaining, or reengineering of existing applications, unless you acquire a commercial license from Software AG and pay the applicable license fees. You may not pass on copies of the Product to any third party or transfer the Product by electronic means to other computers via a network. For multi-user hardware systems or networks, a separate license is required for each user or each workstation. You have the right to make one copy of the Product solely for archival and backup purposes. You may not decompile, disassemble, modify, decrypt, extract or otherwise reverse engineer, or make further copies of the Product or parts thereof. This Evaluation License Agreement, with the downloaded or otherwise provided and used authorization key, is proof of your entering into this agreement and you must retain it. This Evaluation License Agreement does not grant you the right to sublicense, transfer, rent, assign or lease the Product, in whole or in part. THIRD PARTY RESTRICTIONS The Software may contain or include software applications for which the Licensor itself had to acquire a license to use from a third party (\"Third Party Applications\"). These Third Party Applications may be subject to additional license terms (\"Third Party Terms\"), which are available under the web address http://documentation.softwareag.com/legal/thirdparty.htm. The third party shall be entitled - only in relation to the respective third-party software - to exercise the rights of Licensor under this Evaluation License Agreement as a third party beneficiary directly against the licensee. You may not use or distribute these third party applications or its APIs on a stand-alone basis without the Product nor attempt to alter or modify it. LICENSE VALIDITY This Evaluation License Agreement is limited to a period as defined in the license key file. The license might limit your use of the Product to certain features, platforms or restrictions in capacity or other limitations incorporated by default, by license key file. You accept these limitations and will in no event bypass these. COPYRIGHT Software AG or its affiliates are the sole owner of the industrial property rights and copyright to the Product and accompanying user documentation or have the respective distribution rights. References made in or on the Product to the copyright or to other industrial property rights must not be altered, deleted or obliterated in any manner. CONFIDENTIALITY The Product is confidential and proprietary information of Software AG and its licensors, and may not be disclosed to third parties. You shall use such information only for the purpose of exercising the Evaluation License Agreement to the Product and shall disclose confidential and proprietary information only to your employees who require such information for the purpose stated above. You agree to take adequate steps to protect the Product from unauthorized disclosure or use. LIMITED WARRANTY The Product is provided \"as is\" without any warranty whatsoever. You assume full responsibility for the selection of the Product to achieve your intended results and for the installation, use and results obtained from the Product. Any kind of support for the Software AG Product is explicitly excluded. UPDATES AND MAINTENANCE This Evaluation License Agreement does not grant you any right to, license for or interest in any improvements, modifications, enhancements or updates to the Product and documentation or other support services. Such services are typically available under a Commercial License Agreement only. Any such arrangements shall be the subject of a separate written agreement. LIMITATION OF LIABILITY Except where there is a mandatory statutory liability for intent, gross negligence or injury to life, body or health, under no circumstances shall Software AG or its licensors be liable for any damages whatsoever (including, without limitation, damages for loss of business profits, work stoppage, loss of data or other financial loss) arising from the use of, or inability to use, this Product. In no event shall any liability of Software AG arising out of this agreement exceed the amount paid, if any, by you to Software AG hereunder. TERMINATION This Evaluation License Agreement will terminate immediately without notice from Software AG if you fail to comply with any provision of this Evaluation License Agreement. Software AG reserves the right to terminate this agreement immediately for good cause, whereby good cause is understood as any gross breach of this agreement. Upon termination, you must immediately discontinue the use of the Product and destroy the Product and all copies of the Product in physical, electronic or other form. Upon request of Software AG licensee will certify in written that use is discontinued and all copies of the Product are destroyed. EXPORT You may not download or otherwise export or re-export any underlying software, technology or other information from the Products except as stated explicitly in this notice or the Commercial License Agreement and in full compliance with all applicable national and international laws and regulations. You agree to indemnify and hold harmless and defend Software AG against any and all liability arising from or relating to your breach of these export control undertakings. Software AG reserves the right not to honor any affected parts of this notice, or the Commercial License Agreement, in case any national or international export regulations or foreign trade legislation, or any target country / customer / usage restrictions implied by embargos or other sanctions prohibit the provision of export controlled goods (Dual-Use items) and services to be granted to you under either this notice or the Commercial License Agreement. Software AG may inform you if a related official export approval by national or international export control authorities is required. Provision of affected Products will then be postponed until all such required approvals have been granted. The provision of Products not restricted by the above mentioned export prohibitions will remain unaffected of this restriction. MISCELLANEOUS The Product is designed for general office use. It is not designed or intended for use in air traffic control, mass transit systems, critical medical purposes, the operation of nuclear facilities or any other use which could result in a high risk of safety or property damage. You warrant that you will not use the Product for such purposes. The invalidity of any provision of this agreement shall not affect any other part of this agreement. This agreement represents the complete and exclusive statement concerning this Evaluation License Agreement between the parties. No modification or amendment of this agreement will be binding on any party unless acknowledged in writing by their duly authorized representatives. This agreement shall be governed and construed by the laws of the Federal Republic of Germany.","title":"PART D: SOFTWARE AG EVALUATION LICENSE AGREEMENT FOR TRIAL VERSIONS OF SOFTWARE AG PRODUCT ONLY"},{"location":"About/License.html#included-projects","text":"Themes used under license from the ReadTheDocs projects. ReadTheDocs theme - View license . Many thanks to the authors and contributors of those wonderful projects.","title":"Included Projects"},{"location":"About/License.html#mkdocs-license-bsd","text":"Copyright \u00a9 2014, Tom Christie. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentatio and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"MkDocs License (BSD)"},{"location":"About/License.html#chartjsorg-mit","text":"The MIT License (MIT) - View license . Copyright (c) 2018 Chart.js Contributors Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"ChartJS.org (MIT)"},{"location":"About/License.html#google-charts-creative-commons-attribution","text":"Terms of use Creative Commons Attribution 3.0 License","title":"Google Charts (Creative Commons Attribution)"},{"location":"About/Release Notes.html","text":"Release Notes Version 8.1.0 (2020-01-15) Breaking Changes Resolved exclusions issue on folders (#224679). Previously, exclusions on folder checks needed to be applied using the file system separator (\\ or /), which was different than other exclusion configurations, and also gives issues when developing in Windows, but running CI processes in Linux due to the different file separators. This has now been changed to use a '.' (dot) separator and exclusion regular expressions should be configured as such. If you've previously configured exclusion expressions on the folder name rule (NS2) you'll need to switch the file separators to use a '.' for the exclusions to continue to work. All Changes Updated release notes Version 8.0.1 (2019-11-22) Breaking Changes None All Changes Resolved incorrect identification of orphaned service when used by a trigger (#216226) Addition of v10.5 deprecated services Separation of deprecation checks into versions for more accurate reporting based on the version of the IS code you're reviewing against Improved error handling for some edge conditions that returned no indication of the issues Certified Compatibility with v10.5 Certified Compatibility with webMethods Service Designer. Corrected some typos in documentation Version 7.1.0 (2019-08-19) Breaking Changes Defaulted folder-prefix configuration item to expect an environment variable (code.review.folder-prefix) to be supplied to provide the default folder prefix, rather than 'com.softwareag' as was the previous default. You'll need to either edit you configuration file to provide your default root folder structure, or change the invocation of the ISCCR to pass the -Dcode.review.folder-prefix=com.softwareag property/value. (docs) Missing references check (renamed from FQ23 to FQ99) disabled by default to avoid dependencies from other packages causing a build failure. This can be reinstated/enabled is needed. Rules FQ24/FQ25/FQ26 rnenamed to FQ23/FQ24/FQ25. All Changes Tested and certified with webMethods v10.4 (April 2019) release. Tested and certified using openjdk (v1.8.x) Incremented 'code.review.wmversion' to 10.4 in the config.xml provided out of the box Added new tolerance settings to allow for a configurable percentage of warnings or failures that can be tolerated in any review. Added percentages to the XML Schema and summary xml output. Regenerated JaxB Bindings to reflect XSD changes. (docs) Added summary to console output at end of the review including numbers, and an indication of pass/fail/warn Added summary bar to report Resolved issue in eclipse plug-in in relation to determining local IS server for review Improved some error messages in eclipse plug-in when problems occur Defaults folder-prefix on new plugin installation Treemap view of complexity is removed from beta and now the default for a single package review. As such, the previously used complexity bar chart has been commented out of the review report generating XSL (to allow this to be reinstated if desired). Reformatting of some code for better readability Updated documentation Configuration XML for folder-prefix (docs) Updated documentation PRIME Review Checks for changes to FQ23,24,25,26v (docs) Updated documentation tolerance settings (docs) Updated documentation license to reference google charts licensing docs Updated index for new output Updated documentation release notes (this document) Version 6.1.0 (2018-10-23) Added checks (FQ24/FQ25/FQ26) for v10.3 new flow constructs (TRY/CATCH/FINALLY) Added Missing references check (FQ23) to identify missing services/documents that are referenced Added totals summary to eclipse plugin to understand total numbers of success/warn/fail checks Added New deprecated/removed services for v10.1/v10.2/v10.3 Implemented version attribute on rule checks to determine which version of webMethods the rule is relevant from, and added a version property in the configuration (code.review.wmversion) to allow user to provide current running version, this allows for v10.3 (and future version) specific rules that are excluded when the version defined in the property is less than that of the rule check Removed some superfluous trace debug Added a beta treemap view of the code complexity in the report (disabled until this is out of beta) Updated XSL JS Include functionality to be a programmatic function to allow for insertion of any javascript inline (<!--ISCCR.IMPORT(Chart.js)-->) and subsequently deprecated the previous fixed way of including the charting library (<!--INSERT_CHART.JS-->) Correct some typographic errors in the report/logging output Version 6.0.1 (2018-06-06) BUGFIX: Resolved multi-package review issues with the additive nature of per package configuration files (#361 / IR150003) BUGFIX: Resolved per package config discovery issues when running from eclipse (#361 / IR150003) Version 6.0.0 (2018-05-15) Implemented Remote Review Support for Cenralized Devleopment (#345) Updated Multi report to include REST Descriptor (#344) Added REST Descriptor support (#342/#343) BUGFIX: Fixed issues with OData/Map services (#340/#341) Added parser for map servers (#339) Added Sensor information for map services (#338) Added Map Service asset support (#336/#337) Added OData Asset support (#335) Added Collection Type (#334) JUnit Report - removed warnings so only failures contribute to metrics (#333) BUGFIX: Resolved Links in multipackage review report (#332 / IR149733) BUGFIX: Multipackage review - overall end status correction (#331 / IR149840) Multipackage review - implement per package config (#330 / IR149840) BUGFIX: Resolve Linux Path Issues (#328/#329) Version 5.0.0 (2017-07-21) Added Linux runner (#327) BUGFIX: Fixed root path issue (#322) Removed report output setting (#308) Added support for multi package checking (#302) BUGFIX: Fixed connection checker (#301) Updated deprecated services (#297) Added customisable renderer implemention + JUnit render (#292) Version 4.0.2 (2017-06-01) Beta Mult-package review (#285) Implemented Deprecated Service Rules (#284) Allow log name to be changed via system property (#283) Version 4.0.1 (2017-05-22) Option to append date to generated reports (#282) BUGFIX: Fixed exit code issue (#280) Version 4.0.0 (2017-04-18) Addition of exclusion lists (#273/#266) Added PRT Exclusions (#265) BUGFIX: Fixed pipeline issue where value is set to 0 (#263) Added FQ22 (#260) Added FQ16,17,18,19,20 (#257) Added v9.9 Deprecations (#256) Threaded invoke of rules (#253) Added Full support for eclipse plugin (#228)","title":"Release Notes"},{"location":"About/Release Notes.html#release-notes","text":"","title":"Release Notes"},{"location":"About/Release Notes.html#version-810-2020-01-15","text":"","title":"Version 8.1.0 (2020-01-15)"},{"location":"About/Release Notes.html#breaking-changes","text":"Resolved exclusions issue on folders (#224679). Previously, exclusions on folder checks needed to be applied using the file system separator (\\ or /), which was different than other exclusion configurations, and also gives issues when developing in Windows, but running CI processes in Linux due to the different file separators. This has now been changed to use a '.' (dot) separator and exclusion regular expressions should be configured as such. If you've previously configured exclusion expressions on the folder name rule (NS2) you'll need to switch the file separators to use a '.' for the exclusions to continue to work.","title":"Breaking Changes"},{"location":"About/Release Notes.html#all-changes","text":"Updated release notes","title":"All Changes"},{"location":"About/Release Notes.html#version-801-2019-11-22","text":"","title":"Version 8.0.1 (2019-11-22)"},{"location":"About/Release Notes.html#breaking-changes_1","text":"None","title":"Breaking Changes"},{"location":"About/Release Notes.html#all-changes_1","text":"Resolved incorrect identification of orphaned service when used by a trigger (#216226) Addition of v10.5 deprecated services Separation of deprecation checks into versions for more accurate reporting based on the version of the IS code you're reviewing against Improved error handling for some edge conditions that returned no indication of the issues Certified Compatibility with v10.5 Certified Compatibility with webMethods Service Designer. Corrected some typos in documentation","title":"All Changes"},{"location":"About/Release Notes.html#version-710-2019-08-19","text":"","title":"Version 7.1.0 (2019-08-19)"},{"location":"About/Release Notes.html#breaking-changes_2","text":"Defaulted folder-prefix configuration item to expect an environment variable (code.review.folder-prefix) to be supplied to provide the default folder prefix, rather than 'com.softwareag' as was the previous default. You'll need to either edit you configuration file to provide your default root folder structure, or change the invocation of the ISCCR to pass the -Dcode.review.folder-prefix=com.softwareag property/value. (docs) Missing references check (renamed from FQ23 to FQ99) disabled by default to avoid dependencies from other packages causing a build failure. This can be reinstated/enabled is needed. Rules FQ24/FQ25/FQ26 rnenamed to FQ23/FQ24/FQ25.","title":"Breaking Changes"},{"location":"About/Release Notes.html#all-changes_2","text":"Tested and certified with webMethods v10.4 (April 2019) release. Tested and certified using openjdk (v1.8.x) Incremented 'code.review.wmversion' to 10.4 in the config.xml provided out of the box Added new tolerance settings to allow for a configurable percentage of warnings or failures that can be tolerated in any review. Added percentages to the XML Schema and summary xml output. Regenerated JaxB Bindings to reflect XSD changes. (docs) Added summary to console output at end of the review including numbers, and an indication of pass/fail/warn Added summary bar to report Resolved issue in eclipse plug-in in relation to determining local IS server for review Improved some error messages in eclipse plug-in when problems occur Defaults folder-prefix on new plugin installation Treemap view of complexity is removed from beta and now the default for a single package review. As such, the previously used complexity bar chart has been commented out of the review report generating XSL (to allow this to be reinstated if desired). Reformatting of some code for better readability Updated documentation Configuration XML for folder-prefix (docs) Updated documentation PRIME Review Checks for changes to FQ23,24,25,26v (docs) Updated documentation tolerance settings (docs) Updated documentation license to reference google charts licensing docs Updated index for new output Updated documentation release notes (this document)","title":"All Changes"},{"location":"About/Release Notes.html#version-610-2018-10-23","text":"Added checks (FQ24/FQ25/FQ26) for v10.3 new flow constructs (TRY/CATCH/FINALLY) Added Missing references check (FQ23) to identify missing services/documents that are referenced Added totals summary to eclipse plugin to understand total numbers of success/warn/fail checks Added New deprecated/removed services for v10.1/v10.2/v10.3 Implemented version attribute on rule checks to determine which version of webMethods the rule is relevant from, and added a version property in the configuration (code.review.wmversion) to allow user to provide current running version, this allows for v10.3 (and future version) specific rules that are excluded when the version defined in the property is less than that of the rule check Removed some superfluous trace debug Added a beta treemap view of the code complexity in the report (disabled until this is out of beta) Updated XSL JS Include functionality to be a programmatic function to allow for insertion of any javascript inline (<!--ISCCR.IMPORT(Chart.js)-->) and subsequently deprecated the previous fixed way of including the charting library (<!--INSERT_CHART.JS-->) Correct some typographic errors in the report/logging output","title":"Version 6.1.0 (2018-10-23)"},{"location":"About/Release Notes.html#version-601-2018-06-06","text":"BUGFIX: Resolved multi-package review issues with the additive nature of per package configuration files (#361 / IR150003) BUGFIX: Resolved per package config discovery issues when running from eclipse (#361 / IR150003)","title":"Version 6.0.1 (2018-06-06)"},{"location":"About/Release Notes.html#version-600-2018-05-15","text":"Implemented Remote Review Support for Cenralized Devleopment (#345) Updated Multi report to include REST Descriptor (#344) Added REST Descriptor support (#342/#343) BUGFIX: Fixed issues with OData/Map services (#340/#341) Added parser for map servers (#339) Added Sensor information for map services (#338) Added Map Service asset support (#336/#337) Added OData Asset support (#335) Added Collection Type (#334) JUnit Report - removed warnings so only failures contribute to metrics (#333) BUGFIX: Resolved Links in multipackage review report (#332 / IR149733) BUGFIX: Multipackage review - overall end status correction (#331 / IR149840) Multipackage review - implement per package config (#330 / IR149840) BUGFIX: Resolve Linux Path Issues (#328/#329)","title":"Version 6.0.0 (2018-05-15)"},{"location":"About/Release Notes.html#version-500-2017-07-21","text":"Added Linux runner (#327) BUGFIX: Fixed root path issue (#322) Removed report output setting (#308) Added support for multi package checking (#302) BUGFIX: Fixed connection checker (#301) Updated deprecated services (#297) Added customisable renderer implemention + JUnit render (#292)","title":"Version 5.0.0 (2017-07-21)"},{"location":"About/Release Notes.html#version-402-2017-06-01","text":"Beta Mult-package review (#285) Implemented Deprecated Service Rules (#284) Allow log name to be changed via system property (#283)","title":"Version 4.0.2 (2017-06-01)"},{"location":"About/Release Notes.html#version-401-2017-05-22","text":"Option to append date to generated reports (#282) BUGFIX: Fixed exit code issue (#280)","title":"Version 4.0.1 (2017-05-22)"},{"location":"About/Release Notes.html#version-400-2017-04-18","text":"Addition of exclusion lists (#273/#266) Added PRT Exclusions (#265) BUGFIX: Fixed pipeline issue where value is set to 0 (#263) Added FQ22 (#260) Added FQ16,17,18,19,20 (#257) Added v9.9 Deprecations (#256) Threaded invoke of rules (#253) Added Full support for eclipse plugin (#228)","title":"Version 4.0.0 (2017-04-18)"},{"location":"Developers/API Documentation.html","text":"API Documentation The Integration Server Continuous Code Review API is used when you want to build new operations, sensors or decorators. The API documentation can be found here","title":"API Documentation"},{"location":"Developers/API Documentation.html#api-documentation","text":"The Integration Server Continuous Code Review API is used when you want to build new operations, sensors or decorators. The API documentation can be found here","title":"API Documentation"},{"location":"Developers/Adding New Decorators.html","text":"Adding new Decorators Warning This section requires extensive java skills A sensor that records metrics can also have a number of 'decorators' assigned. Decorators sole purpose are to aggregate and analyse metrics within the sensor recordings to be able to provide deep understanding and analysis across the reviewed code. Adding a New Decorator To add a new decorator, you need to do two things Implement and compile a java class that extends the Abstract Decorator class to perform the operation required Add the decorator to a sensor within the configuration XML file Implementing the Decorator Class Within the distribution, a sample decorator is provided within the src directory SampleDecorator.java You can use this as a template for building additional decorators. Each new decorator MUST extend the com.softwareag.gcs.wm.codereview.decorators.Decorator abstract class, and therefore implement the decorate method as follows: package com.softwareag.gcs.wm.codereview.decorators; import java.util.List; import com.softwareag.gcs.wm.codereview.configuration.bindings.ResultsType; public class SampleDecorator extends Decorator { /** * Decorate the sensor readings */ public void decorate() { //Get sensor results List<ResultsType> results = this.getResults(); //save measure as per the sensor this.saveMeasure(\"pi\", \"SampleDecorator\", \"3.142\"); } } The decorator class provides a number of useful functions you might need to implement your new decorator, such as retrieving sensor recorded values, and as with the operation additional provided utility classes can be used or added to supplement your decorator functionality. Building the Decorator Class An ANT script is available to build any custom operations, sensors or decorators. This can be found within the distribution directory and can be run as follows ant -f build-custom-classes.xml This will run the build of any custom operations, sensors and decorators within the src directory The compiled class with be placed within the classes folder and will then be subsequently available to the ISCCR tool. Note if you use additional libraries in your custom operation, you'll need to modify the build-operations ant script to include these, and modify the script that starts the CodeReview to include the additional jar files. Adding the configuration entries Next edit the configuration XML that will be used for the code review to include the decorator within the relevant sensor, e.g. <sensor> <definition sensorName=\"SampleSensor\" sensorClass=\"com.softwareag.gcs.wm.codereview.sensors.SampleSensor\"> <decorator name=\"FlowTotals\" class=\"com.softwareag.gcs.wm.codereview.decorators.SummaryTotals\"/> </definition> </sensor> 11.1.4. Running the Decorator On the next execution of the code review, your decorator will be executed following execution of the sensor.","title":"Adding new Decorators"},{"location":"Developers/Adding New Decorators.html#adding-new-decorators","text":"Warning This section requires extensive java skills A sensor that records metrics can also have a number of 'decorators' assigned. Decorators sole purpose are to aggregate and analyse metrics within the sensor recordings to be able to provide deep understanding and analysis across the reviewed code.","title":"Adding new Decorators"},{"location":"Developers/Adding New Decorators.html#adding-a-new-decorator","text":"To add a new decorator, you need to do two things Implement and compile a java class that extends the Abstract Decorator class to perform the operation required Add the decorator to a sensor within the configuration XML file","title":"Adding a New Decorator"},{"location":"Developers/Adding New Decorators.html#implementing-the-decorator-class","text":"Within the distribution, a sample decorator is provided within the src directory SampleDecorator.java You can use this as a template for building additional decorators. Each new decorator MUST extend the com.softwareag.gcs.wm.codereview.decorators.Decorator abstract class, and therefore implement the decorate method as follows: package com.softwareag.gcs.wm.codereview.decorators; import java.util.List; import com.softwareag.gcs.wm.codereview.configuration.bindings.ResultsType; public class SampleDecorator extends Decorator { /** * Decorate the sensor readings */ public void decorate() { //Get sensor results List<ResultsType> results = this.getResults(); //save measure as per the sensor this.saveMeasure(\"pi\", \"SampleDecorator\", \"3.142\"); } } The decorator class provides a number of useful functions you might need to implement your new decorator, such as retrieving sensor recorded values, and as with the operation additional provided utility classes can be used or added to supplement your decorator functionality.","title":"Implementing the Decorator Class"},{"location":"Developers/Adding New Decorators.html#building-the-decorator-class","text":"An ANT script is available to build any custom operations, sensors or decorators. This can be found within the distribution directory and can be run as follows ant -f build-custom-classes.xml This will run the build of any custom operations, sensors and decorators within the src directory The compiled class with be placed within the classes folder and will then be subsequently available to the ISCCR tool. Note if you use additional libraries in your custom operation, you'll need to modify the build-operations ant script to include these, and modify the script that starts the CodeReview to include the additional jar files.","title":"Building the Decorator Class"},{"location":"Developers/Adding New Decorators.html#adding-the-configuration-entries","text":"Next edit the configuration XML that will be used for the code review to include the decorator within the relevant sensor, e.g. <sensor> <definition sensorName=\"SampleSensor\" sensorClass=\"com.softwareag.gcs.wm.codereview.sensors.SampleSensor\"> <decorator name=\"FlowTotals\" class=\"com.softwareag.gcs.wm.codereview.decorators.SummaryTotals\"/> </definition> </sensor> 11.1.4. Running the Decorator On the next execution of the code review, your decorator will be executed following execution of the sensor.","title":"Adding the configuration entries"},{"location":"Developers/Adding New Operations.html","text":"Adding New Operations ISCCR can be extended with you own checks, either making use of the already implemented operation classes, or by implementing your own operation. This section describes how to build a custom operation, compile and use. There is additional Javadoc documentation distributed with ISCCR to describe the methods that you can use during extension development. Additional Operations Using existing implementation methods Cache Check using the existing Service Property implementation Let\u2019s create a new code check to ensure caching is enabled \u2013 perhaps as an example we have a configuration package that should always have the cache enabled rather than retrieving the config entries from the file each time. The cache option exists in the node.ndf file and looks like: <value name=\"caching\">no</value> Where the value can be yes or no. To achieve this as a check we can want to use the ServiceProperties operation class, and can add a config entry as follows: <check id=\"MY1\" name=\"Cache Enabled\" enabled=\"true\" ignoreFailure=\"true\"> <description>Service cache should be enabled</description> <implementation> <class>com.softwareag.gcs.wm.codereview.operations.ServiceProperties</class> <parameters> <parameter>caching</parameter> <parameter>yes</parameter> </parameters> </implementation> </check> Note The check id must be unique. Invoke Comment Check Using the existing XPath implementation Let\u2019s create a new flow check. Perhaps we have a coding standard where every service invocation should have an associated comment and we want to review this to ensure comments are provided. i The flow code lives in the flow XML file that the XPath Operation works against In this file, you can see an invoke with a comment looks as follows: <INVOKE TIMEOUT=\"\" SERVICE=\"pub.math:addInts\" VALIDATE-IN=\"$none\" VALIDATE-OUT=\"$none\"> <COMMENT>A comment against an invoke</COMMENT> \u2026 </INVOKE> Therefore an XPath statement to check whether a comment has been entered or not can be constructed as follows: count(//INVOKE[string-length(COMMENT)=0])!=0 This counts all the invokes where the comment length is zero, and if the count is not zero, will return false, otherwise if the count is zero, it will return true, i.e. every invoke has a comment. To achieve this as a check we can add a config entry as follows: <check id=\"CUSTOM1\" name=\"Service invoke comments\" enabled=\"true\" ignoreFailure=\"true\"> <description>All service Invokes should have a comment</description> <implementation> <class>com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker</class> <parameters> <parameter>count(//INVOKE) = count(//INVOKE[string-length(COMMENT)=0])</parameter> </parameters> </implementation> </check> Note As previously this rule also has the ignoreFailure flag set to true, this means that if the rule does fail, it won\u2019t abort the CI build process. Adding a new operation implementation Warning The following sections requires extensive java skills To add a new operation, you need to do two things Implement and compile a java class that extends the Abstract \u2018Operation\u2019 class to perform the operation required Add a new check to the configuration XML file that uses your new operation and provides any required parameters. Implementing the Operation Class Within the distribution, a sample operation is provided within the src directory \u2013 SampleOperation.java You can use this as a template for building additional operations. Each new operation MUST extend the com.softwareag.gcs.wm.codereview.operations.Operation abstract class, and therefore implement the performCheckOperation method as follows: package com.softwareag.gcs.wm.codereview.operations; import java.util.ArrayList; import java.util.Iterator; import java.util.List; import com.softwareag.gcs.wm.codereview.utils.FlowUtilities; public class SampleOperation extends com.softwareag.gcs.wm.codereview.operations.Operation { /** * Performs the code review check item */ @Override public void performCheckOperation() { } } It\u2019s also worthwhile changing the log level in the XML file to TRACE and use the LogWriter within your operation to output log information The Operation class provides a number of useful functions you might need to implement your new code review operation. Also there are a number of utility functions provided within the package com.softwareag.gcs.wm.codereview.utils which are provided to simplify development of additional operations. These are fully documented as java-doc documentation and can be found in the \u2018docs/api\u2019 directory of the distribution. The sample operation provided performs a number of tasks to demonstrate how you might want to build an operation. This Sample Operation as implemented checks that for every flow xml file, there should be a node NDF file. This should always be the case, however it serves as a good demonstration. The tasks this performs are: Validate Parameters Get the List of Node NDF files Get the List of Flow Service Files Assert the test (i.e. Is there a NODE file for a FLOW XML file) Add the test to the results list For any test, you must add the test to the result using a call similar to: this.addTestResults(assertion, fullServiceName, result); You can create a main method in your operation (as demonstrated in the SampleOperation) so you can test the operation outside of the Code Review tool to enable you to debug this within your IDE. Building the New Operation Class An ANT script is available to build any custom operations, sensors or decorators. This can be found within the distribution directory and can be run as follows ant -f build-custom-classes.xml This will run the build of any custom operations, sensors and decorators within the src directory and will show a result similar to: Buildfile: C:\\SoftwareAG\\tools\\CodeReview\\build-custom-classes.xml clean: [delete] Deleting directory C:\\SoftwareAG\\tools\\CodeReview\\classes\\com\\softwareag\\gcs\\wm\\codereview\\operations compile: [javac] C:\\SoftwareAG\\tools\\CodeReview\\build-operations.xml:9: warning: 'includeantruntime' was not set, defaulting to build.sysclassp ath=last; set to false for repeatable builds [javac] Compiling 1 source file to C:\\SoftwareAG\\tools\\CodeReview\\classes build: BUILD SUCCESSFUL Total time: 1 second The compiled class with be placed within the classes folder and will then be subsequently available to the ISCCR tool. Note if you use additional libraries in your custom operation, you\u2019ll need to modify the build-operations ant script to include these, and modify the script that starts the CodeReview to include the additional jar files. Adding the configuration entries Next edit the configuration XML that will be used for the code review to include the check, e.g. <check id=\"MY2\" name=\"Sample Operation\" enabled=\"true\" ignoreFailure=\"false\"> <description>Sample Operation</description> <implementation> <class>com.softwareag.gcs.wm.codereview.operations.SampleOperation</class> <parameters> <parameter>MyParam1</parameter> <parameter>MyParam2</parameter> </parameters> </implementation> </check> Running the Operation On the next execution of the code review, your operation will be executed.","title":"Adding New Operations"},{"location":"Developers/Adding New Operations.html#adding-new-operations","text":"ISCCR can be extended with you own checks, either making use of the already implemented operation classes, or by implementing your own operation. This section describes how to build a custom operation, compile and use. There is additional Javadoc documentation distributed with ISCCR to describe the methods that you can use during extension development.","title":"Adding New Operations"},{"location":"Developers/Adding New Operations.html#additional-operations-using-existing-implementation-methods","text":"","title":"Additional Operations Using existing implementation methods"},{"location":"Developers/Adding New Operations.html#cache-check-using-the-existing-service-property-implementation","text":"Let\u2019s create a new code check to ensure caching is enabled \u2013 perhaps as an example we have a configuration package that should always have the cache enabled rather than retrieving the config entries from the file each time. The cache option exists in the node.ndf file and looks like: <value name=\"caching\">no</value> Where the value can be yes or no. To achieve this as a check we can want to use the ServiceProperties operation class, and can add a config entry as follows: <check id=\"MY1\" name=\"Cache Enabled\" enabled=\"true\" ignoreFailure=\"true\"> <description>Service cache should be enabled</description> <implementation> <class>com.softwareag.gcs.wm.codereview.operations.ServiceProperties</class> <parameters> <parameter>caching</parameter> <parameter>yes</parameter> </parameters> </implementation> </check> Note The check id must be unique.","title":"Cache Check using the existing Service Property implementation"},{"location":"Developers/Adding New Operations.html#invoke-comment-check-using-the-existing-xpath-implementation","text":"Let\u2019s create a new flow check. Perhaps we have a coding standard where every service invocation should have an associated comment and we want to review this to ensure comments are provided. i The flow code lives in the flow XML file that the XPath Operation works against In this file, you can see an invoke with a comment looks as follows: <INVOKE TIMEOUT=\"\" SERVICE=\"pub.math:addInts\" VALIDATE-IN=\"$none\" VALIDATE-OUT=\"$none\"> <COMMENT>A comment against an invoke</COMMENT> \u2026 </INVOKE> Therefore an XPath statement to check whether a comment has been entered or not can be constructed as follows: count(//INVOKE[string-length(COMMENT)=0])!=0 This counts all the invokes where the comment length is zero, and if the count is not zero, will return false, otherwise if the count is zero, it will return true, i.e. every invoke has a comment. To achieve this as a check we can add a config entry as follows: <check id=\"CUSTOM1\" name=\"Service invoke comments\" enabled=\"true\" ignoreFailure=\"true\"> <description>All service Invokes should have a comment</description> <implementation> <class>com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker</class> <parameters> <parameter>count(//INVOKE) = count(//INVOKE[string-length(COMMENT)=0])</parameter> </parameters> </implementation> </check> Note As previously this rule also has the ignoreFailure flag set to true, this means that if the rule does fail, it won\u2019t abort the CI build process.","title":"Invoke Comment Check Using the existing XPath implementation"},{"location":"Developers/Adding New Operations.html#adding-a-new-operation-implementation","text":"Warning The following sections requires extensive java skills To add a new operation, you need to do two things Implement and compile a java class that extends the Abstract \u2018Operation\u2019 class to perform the operation required Add a new check to the configuration XML file that uses your new operation and provides any required parameters.","title":"Adding a new operation implementation"},{"location":"Developers/Adding New Operations.html#implementing-the-operation-class","text":"Within the distribution, a sample operation is provided within the src directory \u2013 SampleOperation.java You can use this as a template for building additional operations. Each new operation MUST extend the com.softwareag.gcs.wm.codereview.operations.Operation abstract class, and therefore implement the performCheckOperation method as follows: package com.softwareag.gcs.wm.codereview.operations; import java.util.ArrayList; import java.util.Iterator; import java.util.List; import com.softwareag.gcs.wm.codereview.utils.FlowUtilities; public class SampleOperation extends com.softwareag.gcs.wm.codereview.operations.Operation { /** * Performs the code review check item */ @Override public void performCheckOperation() { } } It\u2019s also worthwhile changing the log level in the XML file to TRACE and use the LogWriter within your operation to output log information The Operation class provides a number of useful functions you might need to implement your new code review operation. Also there are a number of utility functions provided within the package com.softwareag.gcs.wm.codereview.utils which are provided to simplify development of additional operations. These are fully documented as java-doc documentation and can be found in the \u2018docs/api\u2019 directory of the distribution. The sample operation provided performs a number of tasks to demonstrate how you might want to build an operation. This Sample Operation as implemented checks that for every flow xml file, there should be a node NDF file. This should always be the case, however it serves as a good demonstration. The tasks this performs are: Validate Parameters Get the List of Node NDF files Get the List of Flow Service Files Assert the test (i.e. Is there a NODE file for a FLOW XML file) Add the test to the results list For any test, you must add the test to the result using a call similar to: this.addTestResults(assertion, fullServiceName, result); You can create a main method in your operation (as demonstrated in the SampleOperation) so you can test the operation outside of the Code Review tool to enable you to debug this within your IDE.","title":"Implementing the Operation Class"},{"location":"Developers/Adding New Operations.html#building-the-new-operation-class","text":"An ANT script is available to build any custom operations, sensors or decorators. This can be found within the distribution directory and can be run as follows ant -f build-custom-classes.xml This will run the build of any custom operations, sensors and decorators within the src directory and will show a result similar to: Buildfile: C:\\SoftwareAG\\tools\\CodeReview\\build-custom-classes.xml clean: [delete] Deleting directory C:\\SoftwareAG\\tools\\CodeReview\\classes\\com\\softwareag\\gcs\\wm\\codereview\\operations compile: [javac] C:\\SoftwareAG\\tools\\CodeReview\\build-operations.xml:9: warning: 'includeantruntime' was not set, defaulting to build.sysclassp ath=last; set to false for repeatable builds [javac] Compiling 1 source file to C:\\SoftwareAG\\tools\\CodeReview\\classes build: BUILD SUCCESSFUL Total time: 1 second The compiled class with be placed within the classes folder and will then be subsequently available to the ISCCR tool. Note if you use additional libraries in your custom operation, you\u2019ll need to modify the build-operations ant script to include these, and modify the script that starts the CodeReview to include the additional jar files.","title":"Building the New Operation Class"},{"location":"Developers/Adding New Operations.html#adding-the-configuration-entries","text":"Next edit the configuration XML that will be used for the code review to include the check, e.g. <check id=\"MY2\" name=\"Sample Operation\" enabled=\"true\" ignoreFailure=\"false\"> <description>Sample Operation</description> <implementation> <class>com.softwareag.gcs.wm.codereview.operations.SampleOperation</class> <parameters> <parameter>MyParam1</parameter> <parameter>MyParam2</parameter> </parameters> </implementation> </check>","title":"Adding the configuration entries"},{"location":"Developers/Adding New Operations.html#running-the-operation","text":"On the next execution of the code review, your operation will be executed.","title":"Running the Operation"},{"location":"Developers/Adding New Reports.html","text":"Adding New Reports Report Customisation via XSL The report is generated using an XSL, and therefore this can be modified to generate a report in any format you need. On execution of a code review, an XML file is written to the file system. This XML file can be used as sample data to the XSL during development. The report makes use of chart.js http://www.chartjs.org/ to display charts. The chart.js functions are embedded within the HTML at runtime in order to allow the HTML to be standalone. If you create a custom XSL and would like the chart.js to be embedded, ensure that as part of the XSL, you provide the following comment: <xsl:comment>ISCCR.IMPORT(Chart.js)</xsl:comment> as this will be used to determine the insertion point of the chart.js functions. Adding New Renderer Once a new report is created, this can be added to the configuration as a new renderer entry as follows <renderer name=\"new-html-package\" class=\"com.softwareag.gcs.wm.codereview.renderers.XSLRenderer\" scope=\"single\"> <parameters> <parameter>MyNewGenerateReport.xsl</parameter> <parameter>%code.review.output.directory%</parameter> <parameter>%code.review.output.preserve%</parameter> <parameter>html</parameter> </parameters> </renderer>","title":"Adding New Reports"},{"location":"Developers/Adding New Reports.html#adding-new-reports","text":"","title":"Adding New Reports"},{"location":"Developers/Adding New Reports.html#report-customisation-via-xsl","text":"The report is generated using an XSL, and therefore this can be modified to generate a report in any format you need. On execution of a code review, an XML file is written to the file system. This XML file can be used as sample data to the XSL during development. The report makes use of chart.js http://www.chartjs.org/ to display charts. The chart.js functions are embedded within the HTML at runtime in order to allow the HTML to be standalone. If you create a custom XSL and would like the chart.js to be embedded, ensure that as part of the XSL, you provide the following comment: <xsl:comment>ISCCR.IMPORT(Chart.js)</xsl:comment> as this will be used to determine the insertion point of the chart.js functions.","title":"Report Customisation via XSL"},{"location":"Developers/Adding New Reports.html#adding-new-renderer","text":"Once a new report is created, this can be added to the configuration as a new renderer entry as follows <renderer name=\"new-html-package\" class=\"com.softwareag.gcs.wm.codereview.renderers.XSLRenderer\" scope=\"single\"> <parameters> <parameter>MyNewGenerateReport.xsl</parameter> <parameter>%code.review.output.directory%</parameter> <parameter>%code.review.output.preserve%</parameter> <parameter>html</parameter> </parameters> </renderer>","title":"Adding New Renderer"},{"location":"Developers/Adding New Sensors.html","text":"Adding New Sensors Warning This section requires extensive java skills Sensors allow for the recording of numeric facts during a review cycle. This can be as simple as recording the number of items reviewed, or a more complex breakdown of the individual items. Adding a new sensor To add a new sensor, you need to do two things Implement and compile a java class that extends the Abstract \u2018Sensor\u2019 class to perform the operation required Add a new sensor definition to the configuration XML file Implementing the Sensor Class Within the distribution, a sample sensor is provided within the src directory \u2013 SampleSensor.java You can use this as a template for building additional sensors. Each new sensor MUST extend the com.softwareag.gcs.wm.codereview.sensors.Sensor abstract class, and therefore implement the listen method as follows: package com.softwareag.gcs.wm.codereview.sensors; /** * @author ukDXP * */ public class SampleSensor extends Sensor { /* (non-Javadoc) * @see com.softwareag.gcs.wm.codereview.sensors.Sensor#listen() */ @Override protected void listen() { //example of a sensor measure save this.saveMeasure(\"pi\", \"SampleSensor\", \"3.142\"); } } As well as saveMeasure , you can also use saveGroupMeasure , which will create a ResultGroup within the results to collate the sensor recordings within a group. It\u2019s also worthwhile changing the log level in the XML file to TRACE , and use the LogWriter within your operation to output log information. The Sensor class provides a number of useful functions you might need to implement your new sensor and as with the operation additional provided utility classes can be used or added to supplement your sensor functionality. Building the Sensor Class An ANT script is available to build any custom operations, sensors or decorators. This can be found within the distribution directory and can be run as follows ant -f build-custom-classes.xml Note if you use additional libraries in your custom classes, you\u2019ll need to modify the build-operations ant script to include these, and modify the script that starts the CodeReview to include the additional jar files. Adding the configuration entries Next edit the configuration XML that will be used for the code review to include the sensor, e.g. <sensor> <definition sensorName=\"SampleSensor\" sensorClass=\"com.softwareag.gcs.wm.codereview.sensors.SampleSensor\"> </definition> </sensor> Running the Sensor On the next execution of the code review, your Sensor will be executed.","title":"Adding New Sensors"},{"location":"Developers/Adding New Sensors.html#adding-new-sensors","text":"Warning This section requires extensive java skills Sensors allow for the recording of numeric facts during a review cycle. This can be as simple as recording the number of items reviewed, or a more complex breakdown of the individual items.","title":"Adding New Sensors"},{"location":"Developers/Adding New Sensors.html#adding-a-new-sensor","text":"To add a new sensor, you need to do two things Implement and compile a java class that extends the Abstract \u2018Sensor\u2019 class to perform the operation required Add a new sensor definition to the configuration XML file","title":"Adding a new sensor"},{"location":"Developers/Adding New Sensors.html#implementing-the-sensor-class","text":"Within the distribution, a sample sensor is provided within the src directory \u2013 SampleSensor.java You can use this as a template for building additional sensors. Each new sensor MUST extend the com.softwareag.gcs.wm.codereview.sensors.Sensor abstract class, and therefore implement the listen method as follows: package com.softwareag.gcs.wm.codereview.sensors; /** * @author ukDXP * */ public class SampleSensor extends Sensor { /* (non-Javadoc) * @see com.softwareag.gcs.wm.codereview.sensors.Sensor#listen() */ @Override protected void listen() { //example of a sensor measure save this.saveMeasure(\"pi\", \"SampleSensor\", \"3.142\"); } } As well as saveMeasure , you can also use saveGroupMeasure , which will create a ResultGroup within the results to collate the sensor recordings within a group. It\u2019s also worthwhile changing the log level in the XML file to TRACE , and use the LogWriter within your operation to output log information. The Sensor class provides a number of useful functions you might need to implement your new sensor and as with the operation additional provided utility classes can be used or added to supplement your sensor functionality.","title":"Implementing the Sensor Class"},{"location":"Developers/Adding New Sensors.html#building-the-sensor-class","text":"An ANT script is available to build any custom operations, sensors or decorators. This can be found within the distribution directory and can be run as follows ant -f build-custom-classes.xml Note if you use additional libraries in your custom classes, you\u2019ll need to modify the build-operations ant script to include these, and modify the script that starts the CodeReview to include the additional jar files.","title":"Building the Sensor Class"},{"location":"Developers/Adding New Sensors.html#adding-the-configuration-entries","text":"Next edit the configuration XML that will be used for the code review to include the sensor, e.g. <sensor> <definition sensorName=\"SampleSensor\" sensorClass=\"com.softwareag.gcs.wm.codereview.sensors.SampleSensor\"> </definition> </sensor>","title":"Adding the configuration entries"},{"location":"Developers/Adding New Sensors.html#running-the-sensor","text":"On the next execution of the code review, your Sensor will be executed.","title":"Running the Sensor"},{"location":"Developers/Customising Operations.html","text":"Customising Operations ISCCR has a number of code review checks out of the box that you may want to modify based on your review needs. Those checks in particular that you might want to change are related to the naming standards. The ones within ISCCR are based on the prime standards; however, if operating this against an established project with different naming conventions you may wish to modify these checks to fit your conventions by creating an override configuration file and modifying the behaviour within this. The majority of the Naming Standards utilise regular expressions to control the check conditions, e.g NS2 - Folder name This uses a regular expression to check the format, i.e. [a-z]{1}[a-z0-9_]*|_{1}[a-z0-9A-Z_]* This example means: The folder must start with a lowercase a-z character additionally it must be followed with lowercase a-z or 0-9 or an underscore Alternatively, the folder could start with an _ and then allow a-z, A-Z or 0-9 and underscore Should your policy be to allow camelCase folder names, you can override this rule in your own configuration file, and replace the regular expression with something that allows for camel case, e.g [a-z]{1}[a-zA-Z0-9_]","title":"Customising Operations"},{"location":"Developers/Customising Operations.html#customising-operations","text":"ISCCR has a number of code review checks out of the box that you may want to modify based on your review needs. Those checks in particular that you might want to change are related to the naming standards. The ones within ISCCR are based on the prime standards; however, if operating this against an established project with different naming conventions you may wish to modify these checks to fit your conventions by creating an override configuration file and modifying the behaviour within this. The majority of the Naming Standards utilise regular expressions to control the check conditions, e.g NS2 - Folder name This uses a regular expression to check the format, i.e. [a-z]{1}[a-z0-9_]*|_{1}[a-z0-9A-Z_]* This example means: The folder must start with a lowercase a-z character additionally it must be followed with lowercase a-z or 0-9 or an underscore Alternatively, the folder could start with an _ and then allow a-z, A-Z or 0-9 and underscore Should your policy be to allow camelCase folder names, you can override this rule in your own configuration file, and replace the regular expression with something that allows for camel case, e.g [a-z]{1}[a-zA-Z0-9_]","title":"Customising Operations"},{"location":"User Guide/Command Line Options.html","text":"Command Line Options This section of the documentation details all the available command line options that can be used during the execution of the code review engine. code.review.pkgname -Dcode.review.pkgname=[PACKAGE NAME] MANDATORY FOR SINGLE PACKAGE REVIEW This option is mandatory when performing a single package review and must be provided, however, This can be excluded on a multi package review This option provides the name of the package to be reviewed. This name MUST match the exact case as to how the package was created in designer, For Example: -Dcode.review.pgkname=IotDemo code.review.pkgprefix -Dcode.review.pkgprefix=[PREFIX or COMMA SEPARATED LIST OF PREFIXES] MANDTORY This option is mandatory and must be provided This option provides a prefix of the package, or a list of package prefixes where a multi-package review needs to include packages with different prefixes. For example: -Dcode.review.pkgprefix=Iot or for a multi-package review -Dcode.review.pkgprefix=Iot,Sag,Wx code.review.directory -Dcode.review.directory=[LOCATION OF PACKAGES DIRECTORY] MANDATORY This option is mandatory and must be provided This option provides the location of the packages directory. This is normally the location as to where the packages have been checked out of source control, but could also point to the integration server packages directory. For example: -Dcode.review.directory=c:\\softwareag\\IntegrationServer\\instances\\default\\packages code.review.folder-prefix MANDATORY This option is mandatory and must be provided This option provides the The base folder structure required within every package. Normally all packages are expected to have an identical base folder structure (e.g. com.softwareag), but packages from different organisational entities may have different base folder structures. For example: -Dcode.review.folder-prefix=com.softwareag code.review.runmode -Dcode.review.runmode=[MULTI] This option is option and only required when you want to perform a multi-package review. In this scenario, you provide the command option as follows: -Dcode.review.runmode=MULTI Note With a multi package review, the packagename option is not required, and a comma separated list of prefixes can be passed to the pkgprefix option code.review.options -Dcode.review.options=[PATH TO OVERRIDE CONFIGURATION XML] This option allows you to provide a subset configuration xml to override the default behaviour and rules. This allows you to create you own rulesets, exclusions, etc, without changing the base configuration file. Note This is a recommended approach as this allows for easier upgrades, and gives you the ability to quickly take advantage of new checks and rules on subsequent versions of the product Example usage of this options is as follows: -Dcode.review.options=c:\\SoftwareAG\\tools\\ISCCR\\myRules.xml Additional JVM Options Note Any other JVM option can be provided as required. You can parameterise the configuration using environment variables, and these can be passed as a -D option. In addition, on rare occasions you may need to modify the JVM memory options with a -X parameter if a flow service is particularly large (which should be refactored regardless in that scenario!)","title":"Command Line Options"},{"location":"User Guide/Command Line Options.html#command-line-options","text":"This section of the documentation details all the available command line options that can be used during the execution of the code review engine.","title":"Command Line Options"},{"location":"User Guide/Command Line Options.html#codereviewpkgname","text":"-Dcode.review.pkgname=[PACKAGE NAME] MANDATORY FOR SINGLE PACKAGE REVIEW This option is mandatory when performing a single package review and must be provided, however, This can be excluded on a multi package review This option provides the name of the package to be reviewed. This name MUST match the exact case as to how the package was created in designer, For Example: -Dcode.review.pgkname=IotDemo","title":"code.review.pkgname"},{"location":"User Guide/Command Line Options.html#codereviewpkgprefix","text":"-Dcode.review.pkgprefix=[PREFIX or COMMA SEPARATED LIST OF PREFIXES] MANDTORY This option is mandatory and must be provided This option provides a prefix of the package, or a list of package prefixes where a multi-package review needs to include packages with different prefixes. For example: -Dcode.review.pkgprefix=Iot or for a multi-package review -Dcode.review.pkgprefix=Iot,Sag,Wx","title":"code.review.pkgprefix"},{"location":"User Guide/Command Line Options.html#codereviewdirectory","text":"-Dcode.review.directory=[LOCATION OF PACKAGES DIRECTORY] MANDATORY This option is mandatory and must be provided This option provides the location of the packages directory. This is normally the location as to where the packages have been checked out of source control, but could also point to the integration server packages directory. For example: -Dcode.review.directory=c:\\softwareag\\IntegrationServer\\instances\\default\\packages","title":"code.review.directory"},{"location":"User Guide/Command Line Options.html#codereviewfolder-prefix","text":"MANDATORY This option is mandatory and must be provided This option provides the The base folder structure required within every package. Normally all packages are expected to have an identical base folder structure (e.g. com.softwareag), but packages from different organisational entities may have different base folder structures. For example: -Dcode.review.folder-prefix=com.softwareag","title":"code.review.folder-prefix"},{"location":"User Guide/Command Line Options.html#codereviewrunmode","text":"-Dcode.review.runmode=[MULTI] This option is option and only required when you want to perform a multi-package review. In this scenario, you provide the command option as follows: -Dcode.review.runmode=MULTI Note With a multi package review, the packagename option is not required, and a comma separated list of prefixes can be passed to the pkgprefix option","title":"code.review.runmode"},{"location":"User Guide/Command Line Options.html#codereviewoptions","text":"-Dcode.review.options=[PATH TO OVERRIDE CONFIGURATION XML] This option allows you to provide a subset configuration xml to override the default behaviour and rules. This allows you to create you own rulesets, exclusions, etc, without changing the base configuration file. Note This is a recommended approach as this allows for easier upgrades, and gives you the ability to quickly take advantage of new checks and rules on subsequent versions of the product Example usage of this options is as follows: -Dcode.review.options=c:\\SoftwareAG\\tools\\ISCCR\\myRules.xml","title":"code.review.options"},{"location":"User Guide/Command Line Options.html#additional-jvm-options","text":"Note Any other JVM option can be provided as required. You can parameterise the configuration using environment variables, and these can be passed as a -D option. In addition, on rare occasions you may need to modify the JVM memory options with a -X parameter if a flow service is particularly large (which should be refactored regardless in that scenario!)","title":"Additional JVM Options"},{"location":"User Guide/Configuration Xml.html","text":"config.xml The configuration file provides the parameters, review checks, and the configuration of Integration Server Continuous Code Review. The file is split into an number of sections Global Parameters Global parameters provide hard coded or environment variables that control the Code Review process. The following parameters are specified in the configuration file Review Settings Parameter Example Description code.review.wmversion 10.5 This defines the current version of webMethods where the code is intended to be executed. Rules that are version specific will be disabled if this attribute is a lower version that the one provided on the check (e.g. v10.3 TRY/CATCH/FINALLY node checks are not relevant in versions prior to v10.3, or version specific deprecations). Out of the box, this parameter will be specified as the most recent supported version, however this can be modified, or defined to be supplied as an environment variable as needed. code.review.pkgname ${code.review.pkgname} The package name to be reviewed, provided through an environment variable to the command line code.review.pkgprefix ${code.review.pkgprefix} The prefix letters of the package to be review, provided through an environment variable to the command line folder-prefix ${code.review.folder-prefix} The base folder structure required within every package, provided through an environment variable to the command line code.review.directory ${code.review.directory} The location of the packages directory, provided through an environment variable to the command line code.review.output.directory Provides the directory of where to output the files/reports. By default this is empty meaning reports are output to the directory from where the code review process is executed. It is recommended to leave this empty code.review.output.preserve false Whether to pre-pend the date to the report files names to allow you to keep the files over time, versus overwriting the previous report if the value is set to true. code.review.ignore.fail false When set to false, a negative return code will be output from the code review process on failure. When set to true, this will not happen. This parameter is useful as part of a continuous integration process where you wish to stop the build on any quality issues. Recommended to leave set as false Review Tolerance Settings Parameter Example Description code.review.tolerance.warn 101 Percentage of warnings that will be tolerated in the complete review, e.g. Setting this to 10 would allow for 10% of the total test to be warnings. If the total number of warnings exceeds the set percentage, the review will be marked as failed. Out of the box this is defaulted to 101% to allow for 100% of warnings to remain backwards compatibility with previous release code.review.tolerance.fail 0 Percentage of failures that will be tolerated in the complete review, e.g. Setting this to 10 would allow for 10% of the total test to be failures. If the total number of failures exceeds the set percentage, the review will be marked as failed Advanced Configuration Settings Parameter Example Description code.review.logger.level INFO Logging output level. It is recommeneded to leave this as INFO unless you are developing new rules/conditions, and in those scenarios, you may wish to see more detailed logging output by changing the value to TRACE . All supported values are TRACE; DEBUG; INFO; WARNING; SEVERE code.review.operation.threads.timeout 120 This value sets the timeout of the execution threads. If a single check takes longer than the provided time here, it will be aborted. It is recommended not to adjust this unless otherwise advised code.review.operation.threads.embedded 3 This is the number of threads to use for executing rules when not run in interactive mode. It is recommended not to adjust this value unless otherwise advised code.review.operation.threads.interactive 1 This is the number of threads to use for executing rules when run in interactive mode. It is recommended not to adjust this value unless otherwise advised Each global paremeter is provided / configured similar to the following example Environment variable provided parameter <globalParameter name=\"code.review.pkgprefix\"> <description>Package prefix</description> <value>${code.review.pkgprefix}</value> </globalParameter> Hard coded parameter <globalParameter name=\"folder-prefix\"> <description>Root folder prefix used in all services</description> <value>com.softwareag</value> </globalParameter> Review Configuration Each review check is specified using a common structure. Each check has: Name Example description id SP1 A unique short identifier for each check. By default out of the box these follow a naming convention where SP=Service Property, FQ=Flow Quality, NS=Naming Standards, MS=Additional Checks name Stateless The name of the check enabled true When set to true the check is included in a review, when set to false the check is excluded from any review ignoreFailure false When set to true failures are ignored. wmVersion 10.3 Determines the version of webMethods from when this rule is relevant. Description A description This is a full textual description and explanation of the review item Implementation/class com.softwareag....ServiceProperties Defines the Operation implementation to be used Implementation/parameters parameter[1]=stateless;parameter[2]=yes Provides parameters for the operation Implementation/exclusions exclusion[1]=REGEXP1;exclusion[2]=REGEXP2 Implements an exclusion list to exclude matching assets from the review (see below for example) Note The information on each of the checks can be found in User Guide/PRIME Review Checks The following excerpt demonstrates an individual review item <check id=\"SP1\" name=\"Stateless\" enabled=\"true\" ignoreFailure=\"false\"> <description><![CDATA[Services should be stateless to avoid creating session state where not needed. Each session consumes resources on the IS, consumes memory, creates a database entry, and in a clustered environment needs to be synchronized between cluster nodes. To minimize the build-up of unnecessary sessions it is recommended to ensure stateless services are used where possible. This can be changed on the 'stateless' flow property within Designer by setting the value to yes. The table below highlights all services in the package which are currently configured as stateless]]></description> <implementation> <class>com.softwareag.gcs.wm.codereview.operations.ServiceProperties</class> <parameters> <parameter>stateless</parameter> <parameter>yes</parameter> </parameters> </implementation> </check> Exclusions On some occasions, you may wish to exclude particular services or directories from the review. To do this, you can supply a list of exclusions within the check. The exclusions can be singular or multiples and are specified as a regular expression. For example: <check id=\"FQ10\" name=\"Service invoke comments\" enabled=\"true\" ignoreFailure=\"true\"> <description><![CDATA[Comments should be provided for each service that is invoked from the main service. This helps to improve code readability and maintainability to help reduce cost of change. Every service invoke should have a comment value set.]]></description> <implementation> <class>com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker</class> <parameters> <parameter>count(//INVOKE[string-length(COMMENT)=0 and not(@DISABLED)])=0</parameter> </parameters> <exclusions> <exclusion>com\\.softwareag\\.example\\.pub\\:addNumber</exclusion> </exclusions> </implementation> </check> Sensors Sensors provide the ability to glean metrics from the code, and can use a decorator to summarise or provide calculations based on the metrics Each sensor is specified using a common structure. Each sensor has: Name Example Description scope package Whether the sensor executes on an individual package package or the whole set of review assets in a multi-review review definition/sensorName totals Name of the sensor definition/implementation com.softwareag...TotalsSensor Defines the sensor implementation to be used decorator/name FlowTotals Defines the name of any decorator decorator/implementation com.softwareag...FlowTotals Defines the decorator implementation to be used The following excerpt demonstrate an individual sensor (with decorator) <sensor scope=\"package\"> <definition sensorName=\"totals\" sensorClass=\"com.softwareag.gcs.wm.codereview.sensors.TotalsSensor\"> <decorator name=\"FlowTotals\" class=\"com.softwareag.gcs.wm.codereview.decorators.SummaryTotals\"/> </definition> </sensor> Renderers A renderer processes the data of the report including the check results, sensors and decorators and determines what to do with the data. By default there are 4 renderers providing functionality NAME Scope Description XML all Writes the raw XML output to a file. HTML Single Writes a HTML report, created using the GenerateReport.xsl file HTML-MULTI Multi Writes a multi report for a mult-package review JUNIT all Writes an XML File in JUnit publishable format CSV all Writes the data as a CSV file that can be imported into other tools The following excerpt demonstrates an individual renderer <renderer name=\"html-package\" class=\"com.softwareag.gcs.wm.codereview.renderers.XSLRenderer\" scope=\"single\"> <parameters> <parameter>GenerateReport.xsl</parameter> <parameter>%code.review.output.directory%</parameter> <parameter>%code.review.output.preserve%</parameter> <parameter>html</parameter> </parameters> </renderer> Override Configuration Rather than modifying the main configuration file, which would result in difficulties with upgrading, receiving new out of the box checks, and potentially running in a non-supported manner, you can provide you own override configuration file by providing the command line parameter on startup -Dcode.review.options=myConfig.xml This configuration file can be used to override individual rules or parameters, e.g. you can create a file such as: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <CodeCheckConfiguration xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" version=\"1.0\" xsi:noNamespaceSchemaLocation=\"C:\\development\\isccr\\cont-code-review\\trunk\\FlowCodeChecker\\CodeCheckConfiguration.xsd\"> <globalParameters> <!-- Value to use for the root folder checks --> <globalParameter name=\"folder-prefix\"> <description>Root folder prefix used in all services</description> <value>com.myorganisation</value> </globalParameter> </globalParmeters> <checks> <check id=\"SP2\" name=\"Pipeline Save Restore\" enabled=\"true\" ignoreFailure=\"true\"> <description>No Save/Restore Pipeline options should be set against the service. The Save/Restore pipeline options where set can result in unnecessary I/O and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised. It is recommended to remote these options from the services before deployment to a non-development environment, or use the extended property (watt.server.pipeline.processor) to disable these in the non-development environments. Where this is the case, this rule can be ignored</description> <implementation> <class>com.softwareag.gcs.wm.codereview.operations.ServiceProperties</class> <parameters> <parameter>pipeline_option</parameter> <parameter>0</parameter> <parameter>1</parameter> </parameters> </implementation> </check> </checks> </CodeCheckConfiguration> This will: Modify the folder-prefix Override the ignoreFailure property for the SP2 rule to ignore failures Package Specific Configuration An override configuration per package can be placed within the package and committed to source control, by creating a file codereview.xml within the package's config directory. This is a particularly useful technical for (but not limited to) the following: Provide exclusions on individual checks Modify the behaviour of the connections package rule Provide exceptions to naming standards, particularly when related to generated document types.","title":"config.xml"},{"location":"User Guide/Configuration Xml.html#configxml","text":"The configuration file provides the parameters, review checks, and the configuration of Integration Server Continuous Code Review. The file is split into an number of sections","title":"config.xml"},{"location":"User Guide/Configuration Xml.html#global-parameters","text":"Global parameters provide hard coded or environment variables that control the Code Review process. The following parameters are specified in the configuration file","title":"Global Parameters"},{"location":"User Guide/Configuration Xml.html#review-settings","text":"Parameter Example Description code.review.wmversion 10.5 This defines the current version of webMethods where the code is intended to be executed. Rules that are version specific will be disabled if this attribute is a lower version that the one provided on the check (e.g. v10.3 TRY/CATCH/FINALLY node checks are not relevant in versions prior to v10.3, or version specific deprecations). Out of the box, this parameter will be specified as the most recent supported version, however this can be modified, or defined to be supplied as an environment variable as needed. code.review.pkgname ${code.review.pkgname} The package name to be reviewed, provided through an environment variable to the command line code.review.pkgprefix ${code.review.pkgprefix} The prefix letters of the package to be review, provided through an environment variable to the command line folder-prefix ${code.review.folder-prefix} The base folder structure required within every package, provided through an environment variable to the command line code.review.directory ${code.review.directory} The location of the packages directory, provided through an environment variable to the command line code.review.output.directory Provides the directory of where to output the files/reports. By default this is empty meaning reports are output to the directory from where the code review process is executed. It is recommended to leave this empty code.review.output.preserve false Whether to pre-pend the date to the report files names to allow you to keep the files over time, versus overwriting the previous report if the value is set to true. code.review.ignore.fail false When set to false, a negative return code will be output from the code review process on failure. When set to true, this will not happen. This parameter is useful as part of a continuous integration process where you wish to stop the build on any quality issues. Recommended to leave set as false","title":"Review Settings"},{"location":"User Guide/Configuration Xml.html#review-tolerance-settings","text":"Parameter Example Description code.review.tolerance.warn 101 Percentage of warnings that will be tolerated in the complete review, e.g. Setting this to 10 would allow for 10% of the total test to be warnings. If the total number of warnings exceeds the set percentage, the review will be marked as failed. Out of the box this is defaulted to 101% to allow for 100% of warnings to remain backwards compatibility with previous release code.review.tolerance.fail 0 Percentage of failures that will be tolerated in the complete review, e.g. Setting this to 10 would allow for 10% of the total test to be failures. If the total number of failures exceeds the set percentage, the review will be marked as failed","title":"Review Tolerance Settings"},{"location":"User Guide/Configuration Xml.html#advanced-configuration-settings","text":"Parameter Example Description code.review.logger.level INFO Logging output level. It is recommeneded to leave this as INFO unless you are developing new rules/conditions, and in those scenarios, you may wish to see more detailed logging output by changing the value to TRACE . All supported values are TRACE; DEBUG; INFO; WARNING; SEVERE code.review.operation.threads.timeout 120 This value sets the timeout of the execution threads. If a single check takes longer than the provided time here, it will be aborted. It is recommended not to adjust this unless otherwise advised code.review.operation.threads.embedded 3 This is the number of threads to use for executing rules when not run in interactive mode. It is recommended not to adjust this value unless otherwise advised code.review.operation.threads.interactive 1 This is the number of threads to use for executing rules when run in interactive mode. It is recommended not to adjust this value unless otherwise advised Each global paremeter is provided / configured similar to the following example Environment variable provided parameter <globalParameter name=\"code.review.pkgprefix\"> <description>Package prefix</description> <value>${code.review.pkgprefix}</value> </globalParameter> Hard coded parameter <globalParameter name=\"folder-prefix\"> <description>Root folder prefix used in all services</description> <value>com.softwareag</value> </globalParameter>","title":"Advanced Configuration Settings"},{"location":"User Guide/Configuration Xml.html#review-configuration","text":"Each review check is specified using a common structure. Each check has: Name Example description id SP1 A unique short identifier for each check. By default out of the box these follow a naming convention where SP=Service Property, FQ=Flow Quality, NS=Naming Standards, MS=Additional Checks name Stateless The name of the check enabled true When set to true the check is included in a review, when set to false the check is excluded from any review ignoreFailure false When set to true failures are ignored. wmVersion 10.3 Determines the version of webMethods from when this rule is relevant. Description A description This is a full textual description and explanation of the review item Implementation/class com.softwareag....ServiceProperties Defines the Operation implementation to be used Implementation/parameters parameter[1]=stateless;parameter[2]=yes Provides parameters for the operation Implementation/exclusions exclusion[1]=REGEXP1;exclusion[2]=REGEXP2 Implements an exclusion list to exclude matching assets from the review (see below for example) Note The information on each of the checks can be found in User Guide/PRIME Review Checks The following excerpt demonstrates an individual review item <check id=\"SP1\" name=\"Stateless\" enabled=\"true\" ignoreFailure=\"false\"> <description><![CDATA[Services should be stateless to avoid creating session state where not needed. Each session consumes resources on the IS, consumes memory, creates a database entry, and in a clustered environment needs to be synchronized between cluster nodes. To minimize the build-up of unnecessary sessions it is recommended to ensure stateless services are used where possible. This can be changed on the 'stateless' flow property within Designer by setting the value to yes. The table below highlights all services in the package which are currently configured as stateless]]></description> <implementation> <class>com.softwareag.gcs.wm.codereview.operations.ServiceProperties</class> <parameters> <parameter>stateless</parameter> <parameter>yes</parameter> </parameters> </implementation> </check>","title":"Review Configuration"},{"location":"User Guide/Configuration Xml.html#exclusions","text":"On some occasions, you may wish to exclude particular services or directories from the review. To do this, you can supply a list of exclusions within the check. The exclusions can be singular or multiples and are specified as a regular expression. For example: <check id=\"FQ10\" name=\"Service invoke comments\" enabled=\"true\" ignoreFailure=\"true\"> <description><![CDATA[Comments should be provided for each service that is invoked from the main service. This helps to improve code readability and maintainability to help reduce cost of change. Every service invoke should have a comment value set.]]></description> <implementation> <class>com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker</class> <parameters> <parameter>count(//INVOKE[string-length(COMMENT)=0 and not(@DISABLED)])=0</parameter> </parameters> <exclusions> <exclusion>com\\.softwareag\\.example\\.pub\\:addNumber</exclusion> </exclusions> </implementation> </check>","title":"Exclusions"},{"location":"User Guide/Configuration Xml.html#sensors","text":"Sensors provide the ability to glean metrics from the code, and can use a decorator to summarise or provide calculations based on the metrics Each sensor is specified using a common structure. Each sensor has: Name Example Description scope package Whether the sensor executes on an individual package package or the whole set of review assets in a multi-review review definition/sensorName totals Name of the sensor definition/implementation com.softwareag...TotalsSensor Defines the sensor implementation to be used decorator/name FlowTotals Defines the name of any decorator decorator/implementation com.softwareag...FlowTotals Defines the decorator implementation to be used The following excerpt demonstrate an individual sensor (with decorator) <sensor scope=\"package\"> <definition sensorName=\"totals\" sensorClass=\"com.softwareag.gcs.wm.codereview.sensors.TotalsSensor\"> <decorator name=\"FlowTotals\" class=\"com.softwareag.gcs.wm.codereview.decorators.SummaryTotals\"/> </definition> </sensor>","title":"Sensors"},{"location":"User Guide/Configuration Xml.html#renderers","text":"A renderer processes the data of the report including the check results, sensors and decorators and determines what to do with the data. By default there are 4 renderers providing functionality NAME Scope Description XML all Writes the raw XML output to a file. HTML Single Writes a HTML report, created using the GenerateReport.xsl file HTML-MULTI Multi Writes a multi report for a mult-package review JUNIT all Writes an XML File in JUnit publishable format CSV all Writes the data as a CSV file that can be imported into other tools The following excerpt demonstrates an individual renderer <renderer name=\"html-package\" class=\"com.softwareag.gcs.wm.codereview.renderers.XSLRenderer\" scope=\"single\"> <parameters> <parameter>GenerateReport.xsl</parameter> <parameter>%code.review.output.directory%</parameter> <parameter>%code.review.output.preserve%</parameter> <parameter>html</parameter> </parameters> </renderer>","title":"Renderers"},{"location":"User Guide/Configuration Xml.html#override-configuration","text":"Rather than modifying the main configuration file, which would result in difficulties with upgrading, receiving new out of the box checks, and potentially running in a non-supported manner, you can provide you own override configuration file by providing the command line parameter on startup -Dcode.review.options=myConfig.xml This configuration file can be used to override individual rules or parameters, e.g. you can create a file such as: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <CodeCheckConfiguration xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" version=\"1.0\" xsi:noNamespaceSchemaLocation=\"C:\\development\\isccr\\cont-code-review\\trunk\\FlowCodeChecker\\CodeCheckConfiguration.xsd\"> <globalParameters> <!-- Value to use for the root folder checks --> <globalParameter name=\"folder-prefix\"> <description>Root folder prefix used in all services</description> <value>com.myorganisation</value> </globalParameter> </globalParmeters> <checks> <check id=\"SP2\" name=\"Pipeline Save Restore\" enabled=\"true\" ignoreFailure=\"true\"> <description>No Save/Restore Pipeline options should be set against the service. The Save/Restore pipeline options where set can result in unnecessary I/O and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised. It is recommended to remote these options from the services before deployment to a non-development environment, or use the extended property (watt.server.pipeline.processor) to disable these in the non-development environments. Where this is the case, this rule can be ignored</description> <implementation> <class>com.softwareag.gcs.wm.codereview.operations.ServiceProperties</class> <parameters> <parameter>pipeline_option</parameter> <parameter>0</parameter> <parameter>1</parameter> </parameters> </implementation> </check> </checks> </CodeCheckConfiguration> This will: Modify the folder-prefix Override the ignoreFailure property for the SP2 rule to ignore failures","title":"Override Configuration"},{"location":"User Guide/Configuration Xml.html#package-specific-configuration","text":"An override configuration per package can be placed within the package and committed to source control, by creating a file codereview.xml within the package's config directory. This is a particularly useful technical for (but not limited to) the following: Provide exclusions on individual checks Modify the behaviour of the connections package rule Provide exceptions to naming standards, particularly when related to generated document types.","title":"Package Specific Configuration"},{"location":"User Guide/Continuous Integration (CI) Server.html","text":"Continuous Integration (CI) Server Pre-requisites Installation and Configuration of a suitable CI tool (e.g Jenkins) Modification of the CodeReview.cmd as detailed here Implementation After following the installation notes, and ensuring the pre-requisites are complete, you can configure the code review engine in a CI Process as follows Extract the Package Source code from source repository Extract the package files from source control using the CI tools functionality, e.g. Create the job configuration Use an excute batch command (windows) or shell (linux) to execute the code review, e.g. Note In this example the %workspace%\\%JOB_NAME% parameter is provided as the path to the code and an override options file along with the other mandatory parameters Build Run the build job and examine the output Publish JUnit report Publish the generated JUnit report to provide history","title":"Continuous Integration (CI) Server"},{"location":"User Guide/Continuous Integration (CI) Server.html#continuous-integration-ci-server","text":"","title":"Continuous Integration (CI) Server"},{"location":"User Guide/Continuous Integration (CI) Server.html#pre-requisites","text":"Installation and Configuration of a suitable CI tool (e.g Jenkins) Modification of the CodeReview.cmd as detailed here","title":"Pre-requisites"},{"location":"User Guide/Continuous Integration (CI) Server.html#implementation","text":"After following the installation notes, and ensuring the pre-requisites are complete, you can configure the code review engine in a CI Process as follows","title":"Implementation"},{"location":"User Guide/Continuous Integration (CI) Server.html#extract-the-package-source-code-from-source-repository","text":"Extract the package files from source control using the CI tools functionality, e.g.","title":"Extract the Package Source code from source repository"},{"location":"User Guide/Continuous Integration (CI) Server.html#create-the-job-configuration","text":"Use an excute batch command (windows) or shell (linux) to execute the code review, e.g. Note In this example the %workspace%\\%JOB_NAME% parameter is provided as the path to the code and an override options file along with the other mandatory parameters","title":"Create the job configuration"},{"location":"User Guide/Continuous Integration (CI) Server.html#build","text":"Run the build job and examine the output","title":"Build"},{"location":"User Guide/Continuous Integration (CI) Server.html#publish-junit-report","text":"Publish the generated JUnit report to provide history","title":"Publish JUnit report"},{"location":"User Guide/Eclipse Plugin.html","text":"Eclipse Plugin Configuration The configuration of ISCCR can be found within the menu under window/preferences/Continuous Code Review. Within these settings you can Specify the location to the code-review execution engine Provide a list of package prefixes that are allowed to be reviewed Provide any custom JVM parameters Determine what to show (failure/warning/success) on review Determine what the default action is when double clicking on a review item This looks like the following: Review Individual Package To review a package, assuming the prefix has been added within the configuration, right click on the package and select Continuous Code Review / Review Package as shown below: Once selected, if not already visible, the review results panel will open and inform that the review is currently in process On completion of the review, the results will be displayed Double clicking on a result (depending on your default configuration) the detail will be shown Selecting OK will take you to the asset directly for editing (where possible) Additionally you can control the results visibility in the results pane by dropping down the view panel Review all Packages To review all packages, right click on the Integration Server and select Continuous Code Review/Review All Packages as shown below: Note Only packages that match the prefixes specified in the configuration will be included in the review","title":"Eclipse Plugin"},{"location":"User Guide/Eclipse Plugin.html#eclipse-plugin","text":"","title":"Eclipse Plugin"},{"location":"User Guide/Eclipse Plugin.html#configuration","text":"The configuration of ISCCR can be found within the menu under window/preferences/Continuous Code Review. Within these settings you can Specify the location to the code-review execution engine Provide a list of package prefixes that are allowed to be reviewed Provide any custom JVM parameters Determine what to show (failure/warning/success) on review Determine what the default action is when double clicking on a review item This looks like the following:","title":"Configuration"},{"location":"User Guide/Eclipse Plugin.html#review-individual-package","text":"To review a package, assuming the prefix has been added within the configuration, right click on the package and select Continuous Code Review / Review Package as shown below: Once selected, if not already visible, the review results panel will open and inform that the review is currently in process On completion of the review, the results will be displayed Double clicking on a result (depending on your default configuration) the detail will be shown Selecting OK will take you to the asset directly for editing (where possible) Additionally you can control the results visibility in the results pane by dropping down the view panel","title":"Review Individual Package"},{"location":"User Guide/Eclipse Plugin.html#review-all-packages","text":"To review all packages, right click on the Integration Server and select Continuous Code Review/Review All Packages as shown below: Note Only packages that match the prefixes specified in the configuration will be included in the review","title":"Review all Packages"},{"location":"User Guide/PRIME Review Checks.html","text":"PRIME Review Checks SP1 - Stateless Services should be stateless to avoid creating session state where not needed. Each session consumes resources on the IS, consumes memory, creates a database entry, and in a clustered environment needs to be synchronized between cluster nodes. To minimize the build-up of unnecessary sessions it is recommended to ensure stateless services are used where possible. This can be changed on the 'stateless' flow property within Designer by setting the value to yes. SP2 - Pipeline Save/Restore No Save/Restore Pipeline options should be set against the service. The Save/Restore pipeline options where set can result in unnecessary I/O and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised. It is recommended to remote these options from the services before deployment to a non-development environment, or use the extended property (watt.server.pipeline.processor) to disable these in the non-development environments. Where this is the case, this rule can be ignored FQ1 - Pipeline Services No Save/Restore/Trace Pipeline services should exist within the flow service, including: pub.flow:restorePipeline pub.flow:restorePipelineFromFile pub.flow:savePipeline pub.flow:savePipelineFromFile pub.flow:tracePipeline Save/Restore pipeline services result in unnecessary I/O and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised. It is recommended to delete these from the services before deployment to a non-development environment to ensure maximum performance. Alternative to this is to use the pipeline service options from within designer and disable these in the non-development environments as described in the previous check. FQ2 - Clear Pipeline The ClearPipeline service should not be used as pipeline variables should be dropped immediately as soon as they are no longer required. ClearPipeline leads to unnecessary overhead at the pipeline is walked to determine whether to preserve or drop variables, and can have significant impact on performance when a large pipeline is present. It is recommended to delete these services from the flow and drop variables once they are no longer needed. FQ3 - Deprecated Services Use of deprecated services is not recommended as these will be dropped from the product in a future release. Please refer to the built-in-services-guide for replacements to any deprecated services discovered to be in use and modify the flow to remove the deprecated service and update with the recommended alternative. FQ4 - Disabled Services services should be removed to avoid performance issues as the flow is interpreted during execution. This also results in smaller, more maintainable flow services which result in a better understanding and lower cost of maintenance. Recommendation is to delete rather than disable any code no longer needed. FQ5 - Use of Pub.Storage pub.storage services should not be used due to performance issues. The pub.storage services have an implicit locking model and are not intended to be a high performance all-purpose database. Where pub.storage services have been used, it is recommended to re-architect these, particularly in high-throughput scenarios. FQ6 - Debug Log Debug Log services should be removed to avoid performance issues during execution. Where logging is required, the recommendation is to implement a more general purpose and configurable logging framework to help keep you logs more manageable and separate from product logging FQ7 - Public Services Try/Catch Public services must have a try catch within them to ensure graceful handling of error conditions when these occur. Public services (or top level services) need to decide how to retry or return the error condition to the consuming application. Recommendation is to use Sequence nodes to wrap the execution of the public service within a try/catch block and use the catch to handle the error condition. Try/catch can be achieved with sequence nodes by having a top level sequence with the exit on value set to \"SUCCESS\" and 2 inner sequences, the try, with the exit on value set to \"FAILURE\" and the catch, with the exit on value set to \"DONE\". It is also recommended to add comments to these sequences to aid understanding so that a developer can identify these are for try/catch usage.` FQ8 - Connections Package All JDBC Adapter connections should be in separate packages, that is a package should not contain connections mixed in with other assets. This aids deployment of services as this means changes to packages can be deployed without unnecessarily affecting the JDBC Adapter database connections. Recommendation is to have adapter connections in packages on their own, and not mix these types. FQ9 - FTP Timeout Ensure timeout is specified on FTP services. If no timeout is specified on FTP services, the default timeout value is unlimited, meaning there is a possibility of consuming threads on the Integration Server for a long period of time, especially in the scenario where the FTP server isn't available. Recommendation is to add a timeout value to the invocation where these services are used. FQ10 - Service invoke comments Comments should be provided for each service that is invoked from the main service. This helps to improve code readability and maintainability to help reduce cost of change. Every service invoke should have a comment value set. FQ11 - Sequence comments Comments should be provided for each sequence node that is used. This helps to improve code readability and maintainability to help reduce cost of change. Every sequence node should have a comment value set. FQ12 - Unauthorised Access/Orphaned All services within this package should be invoked through a public service. This rule Identifies any assets within the package that are not used directly or indirectly from a public flow service or DSP file contained within this package, and therefore are either not used, or are called from outside the package breaking the public/private access principle. FQ13 - Branch without switch or evaluate labels The BRANCH step selects and executes a child step based on the value of one or more variables in the pipeline. You indicate the variables you want to branch on by specifying a switch value or by writing an expression that includes the variables, therefore a branch must have either a switch value or have evaluate labels set to true. FQ14 - Branch on expression when child step is without specified lable or $null If you branch on expressions (Evaluate labels is set to True), you cannot branch on null or empty values. When executing the BRANCH step and evaluating labels, Integration Server ignores target steps with a blank or set to $null label. FQ15 - Exit Node from Specification The EXIT step exits the entire flow service or a single flow step. Specifically, it may exit from the nearest ancestor loop step, a specified ancestor step, the parent step, or the entire flow service. An exit 'From' value is required to determine where to exit from FQ16 - Branch Step must have child nodes A Branch step in a flow service must have a child node for it to be relevant. If a branch step has no child nodes it should be deleted FQ17 - Loop step must have child nodes A Loop step in a flow service must have a child node for it to be relevant. If a loop step has no child nodes it should be deleted FQ18 - Repeat step must have child nodes A Repeat step in a flow service must have a child node for it to be relevant. If a repeat step has no child nodes it should be deleted FQ19 - Sequence step must have child nodes A Sequence step in a flow service must have a child node for it to be relevant. If a sequence step has no child nodes it should be deleted FQ20 - Map steps must have mapped fields A Map step in a flow service must have mapped fields. If a map step has no mapped fields it should be deleted FQ21 - Loop must have an input array provided A loop step must have an input array variable provided FQ22 - Flow service should not be empty A flow service should contain implementation, otherwise it should be removed from the package FQ23 - Try step must have child nodes (v10.3 onwards) A try step in a flow service must have a child node for it to be relevant. If a try step has no child nodes it should be deleted FQ24 - Catch step must have child nodes (v10.3 onwards) A catch step in a flow service must have a child node for it to be relevant. If a catch step has no child nodes it should be deleted FQ25 - Finally step must have child nodes (v10.3 onwards) A finally step in a flow service must have a child node for it to be relevant. If a finally step has no child nodes it should be deleted FQ99 - References to assets should exist References to other assets (such as Invocations to flow services and document references) should exist NS1 - Root folder name Root Folder should not be the same as the package as this can cause namespace issues should the code need to be refactored or moved to other packages for promotion to common services, inhibiting reusability. Recommendation is to set a separate prefix folder structure from the package and use this across all packages differentiating below the prefix. This can be one or two levels deep (but ideally should be no more) and commonly is the inverse domain name of the organisation, e.g. \"com.softwareag\" NS2 - Folder name Folders should only contain lower case ascii characters and digits. In certain scenarios, use of the underscore character '_' is allowed but should be avoided where possible. NS3 - Folder prefix Ensure that all assets exist within the specified prefix folders. Recommendation is to set a separate prefix folder structure from the package and use this across all packages differentiating below the prefix. This can be one or two levels deep (but ideally should be no more) and commonly is the inverse domain name of the organisation, e.g. \"com.softwareag\". NS4 - Package name Ensure the package prefix has been specified and package name conforms to standards. The package name should not end with the word \"Package\" or \"Pkg\". Package names must not be prefixed with \"Wm\". These usually represent packages distributed by webMethods. Packages should start with an uppercase character and only contain alpha numeric character plus the underscore when absolutely required. Package Name should start with your provided prefix. A package prefix aids identification of packages created by the organisation. NS5 - Service name Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST services) NS6 - Document name Ensure Document definition names conform to naming standards. A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary. Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check. NS7 - Schema name Ensure Schemas definitions conform to naming standards. A schema must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary. NS8 - FlatFile name Ensure Flat File Dictionaries and Schema definitions conform to naming standards. They must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary. NS9 - Blaze name Ensure Blaze Rules Conform to the Naming Standards. Blaze rule service names must only contain alpha numeric characters and the underscore when absolutely necessary. NS10 - XSL name Ensure XSL Services Conform to the Naming Standards. XSL service names must start with a lower case letter, should be camel case, and contain only alpha numeric characters NS11 - Adapter name Ensure Adapter Services Conform to the Naming Standards. Adapter service names must start with a lower case letter, should be camel case, and contain only alpha numeric characters NS12 - Trigger name Ensure Triggers Conform to the Naming Standards. Trigger names must start with a lower case letter, should be camel case, and contain only alpha numeric characters NS13 - WSD name Ensure WSDs Conform to the Naming Standards. WSD names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary NS14 - Connection name Ensure Connections Conform to the Naming Standards. Connection names must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary NS15 - Document variable name Ensure variable names within document definitions conform to the naming standards. Variable names in document definitions must start with a lower case letter, should be camel case, and contain only alpha numeric characters. Caters for documents generated from XSDs where the document name may contain namespace prefix and use of underscore and hyphen present NS16 - Service signature name Ensure Input/Output variables in service signatures conform to the naming standards. Variable names in service signatures must start with a lower case letter, should be camel case, and contain only alpha numeric characters NS17 - REST Resource name Ensure REST Resources Conform to the Naming Standards. REST resource names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary NS18 - REST Descriptor name Ensure REST Descriptors conform to the Naming Standards. REST descriptor names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary MS1 - Non-production service package suffixes Ensure packages with specified suffixes are not deployed to production. This is to ensure that test packages ( _TEST), stub packages ( _STUB) and development packages (*_DEV) are not deployed incorrectly into production class environments.","title":"PRIME Review Checks"},{"location":"User Guide/PRIME Review Checks.html#prime-review-checks","text":"","title":"PRIME Review Checks"},{"location":"User Guide/PRIME Review Checks.html#sp1-stateless","text":"Services should be stateless to avoid creating session state where not needed. Each session consumes resources on the IS, consumes memory, creates a database entry, and in a clustered environment needs to be synchronized between cluster nodes. To minimize the build-up of unnecessary sessions it is recommended to ensure stateless services are used where possible. This can be changed on the 'stateless' flow property within Designer by setting the value to yes.","title":"SP1 - Stateless"},{"location":"User Guide/PRIME Review Checks.html#sp2-pipeline-saverestore","text":"No Save/Restore Pipeline options should be set against the service. The Save/Restore pipeline options where set can result in unnecessary I/O and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised. It is recommended to remote these options from the services before deployment to a non-development environment, or use the extended property (watt.server.pipeline.processor) to disable these in the non-development environments. Where this is the case, this rule can be ignored","title":"SP2 - Pipeline Save/Restore"},{"location":"User Guide/PRIME Review Checks.html#fq1-pipeline-services","text":"No Save/Restore/Trace Pipeline services should exist within the flow service, including: pub.flow:restorePipeline pub.flow:restorePipelineFromFile pub.flow:savePipeline pub.flow:savePipelineFromFile pub.flow:tracePipeline Save/Restore pipeline services result in unnecessary I/O and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised. It is recommended to delete these from the services before deployment to a non-development environment to ensure maximum performance. Alternative to this is to use the pipeline service options from within designer and disable these in the non-development environments as described in the previous check.","title":"FQ1 - Pipeline Services"},{"location":"User Guide/PRIME Review Checks.html#fq2-clear-pipeline","text":"The ClearPipeline service should not be used as pipeline variables should be dropped immediately as soon as they are no longer required. ClearPipeline leads to unnecessary overhead at the pipeline is walked to determine whether to preserve or drop variables, and can have significant impact on performance when a large pipeline is present. It is recommended to delete these services from the flow and drop variables once they are no longer needed.","title":"FQ2 - Clear Pipeline"},{"location":"User Guide/PRIME Review Checks.html#fq3-deprecated-services","text":"Use of deprecated services is not recommended as these will be dropped from the product in a future release. Please refer to the built-in-services-guide for replacements to any deprecated services discovered to be in use and modify the flow to remove the deprecated service and update with the recommended alternative.","title":"FQ3 - Deprecated Services"},{"location":"User Guide/PRIME Review Checks.html#fq4-disabled-services","text":"services should be removed to avoid performance issues as the flow is interpreted during execution. This also results in smaller, more maintainable flow services which result in a better understanding and lower cost of maintenance. Recommendation is to delete rather than disable any code no longer needed.","title":"FQ4 - Disabled Services"},{"location":"User Guide/PRIME Review Checks.html#fq5-use-of-pubstorage","text":"pub.storage services should not be used due to performance issues. The pub.storage services have an implicit locking model and are not intended to be a high performance all-purpose database. Where pub.storage services have been used, it is recommended to re-architect these, particularly in high-throughput scenarios.","title":"FQ5 - Use of Pub.Storage"},{"location":"User Guide/PRIME Review Checks.html#fq6-debug-log","text":"Debug Log services should be removed to avoid performance issues during execution. Where logging is required, the recommendation is to implement a more general purpose and configurable logging framework to help keep you logs more manageable and separate from product logging","title":"FQ6 - Debug Log"},{"location":"User Guide/PRIME Review Checks.html#fq7-public-services-trycatch","text":"Public services must have a try catch within them to ensure graceful handling of error conditions when these occur. Public services (or top level services) need to decide how to retry or return the error condition to the consuming application. Recommendation is to use Sequence nodes to wrap the execution of the public service within a try/catch block and use the catch to handle the error condition. Try/catch can be achieved with sequence nodes by having a top level sequence with the exit on value set to \"SUCCESS\" and 2 inner sequences, the try, with the exit on value set to \"FAILURE\" and the catch, with the exit on value set to \"DONE\". It is also recommended to add comments to these sequences to aid understanding so that a developer can identify these are for try/catch usage.`","title":"FQ7 - Public Services Try/Catch"},{"location":"User Guide/PRIME Review Checks.html#fq8-connections-package","text":"All JDBC Adapter connections should be in separate packages, that is a package should not contain connections mixed in with other assets. This aids deployment of services as this means changes to packages can be deployed without unnecessarily affecting the JDBC Adapter database connections. Recommendation is to have adapter connections in packages on their own, and not mix these types.","title":"FQ8 - Connections Package"},{"location":"User Guide/PRIME Review Checks.html#fq9-ftp-timeout","text":"Ensure timeout is specified on FTP services. If no timeout is specified on FTP services, the default timeout value is unlimited, meaning there is a possibility of consuming threads on the Integration Server for a long period of time, especially in the scenario where the FTP server isn't available. Recommendation is to add a timeout value to the invocation where these services are used.","title":"FQ9 - FTP Timeout"},{"location":"User Guide/PRIME Review Checks.html#fq10-service-invoke-comments","text":"Comments should be provided for each service that is invoked from the main service. This helps to improve code readability and maintainability to help reduce cost of change. Every service invoke should have a comment value set.","title":"FQ10 - Service invoke comments"},{"location":"User Guide/PRIME Review Checks.html#fq11-sequence-comments","text":"Comments should be provided for each sequence node that is used. This helps to improve code readability and maintainability to help reduce cost of change. Every sequence node should have a comment value set.","title":"FQ11 - Sequence comments"},{"location":"User Guide/PRIME Review Checks.html#fq12-unauthorised-accessorphaned","text":"All services within this package should be invoked through a public service. This rule Identifies any assets within the package that are not used directly or indirectly from a public flow service or DSP file contained within this package, and therefore are either not used, or are called from outside the package breaking the public/private access principle.","title":"FQ12 - Unauthorised Access/Orphaned"},{"location":"User Guide/PRIME Review Checks.html#fq13-branch-without-switch-or-evaluate-labels","text":"The BRANCH step selects and executes a child step based on the value of one or more variables in the pipeline. You indicate the variables you want to branch on by specifying a switch value or by writing an expression that includes the variables, therefore a branch must have either a switch value or have evaluate labels set to true.","title":"FQ13 - Branch without switch or evaluate labels"},{"location":"User Guide/PRIME Review Checks.html#fq14-branch-on-expression-when-child-step-is-without-specified-lable-or-null","text":"If you branch on expressions (Evaluate labels is set to True), you cannot branch on null or empty values. When executing the BRANCH step and evaluating labels, Integration Server ignores target steps with a blank or set to $null label.","title":"FQ14 - Branch on expression when child step is without specified lable or $null"},{"location":"User Guide/PRIME Review Checks.html#fq15-exit-node-from-specification","text":"The EXIT step exits the entire flow service or a single flow step. Specifically, it may exit from the nearest ancestor loop step, a specified ancestor step, the parent step, or the entire flow service. An exit 'From' value is required to determine where to exit from","title":"FQ15 - Exit Node from Specification"},{"location":"User Guide/PRIME Review Checks.html#fq16-branch-step-must-have-child-nodes","text":"A Branch step in a flow service must have a child node for it to be relevant. If a branch step has no child nodes it should be deleted","title":"FQ16 - Branch Step must have child nodes"},{"location":"User Guide/PRIME Review Checks.html#fq17-loop-step-must-have-child-nodes","text":"A Loop step in a flow service must have a child node for it to be relevant. If a loop step has no child nodes it should be deleted","title":"FQ17 - Loop step must have child nodes"},{"location":"User Guide/PRIME Review Checks.html#fq18-repeat-step-must-have-child-nodes","text":"A Repeat step in a flow service must have a child node for it to be relevant. If a repeat step has no child nodes it should be deleted","title":"FQ18 - Repeat step must have child nodes"},{"location":"User Guide/PRIME Review Checks.html#fq19-sequence-step-must-have-child-nodes","text":"A Sequence step in a flow service must have a child node for it to be relevant. If a sequence step has no child nodes it should be deleted","title":"FQ19 - Sequence step must have child nodes"},{"location":"User Guide/PRIME Review Checks.html#fq20-map-steps-must-have-mapped-fields","text":"A Map step in a flow service must have mapped fields. If a map step has no mapped fields it should be deleted","title":"FQ20 - Map steps must have mapped fields"},{"location":"User Guide/PRIME Review Checks.html#fq21-loop-must-have-an-input-array-provided","text":"A loop step must have an input array variable provided","title":"FQ21 - Loop must have an input array provided"},{"location":"User Guide/PRIME Review Checks.html#fq22-flow-service-should-not-be-empty","text":"A flow service should contain implementation, otherwise it should be removed from the package","title":"FQ22 - Flow service should not be empty"},{"location":"User Guide/PRIME Review Checks.html#fq23-try-step-must-have-child-nodes-v103-onwards","text":"A try step in a flow service must have a child node for it to be relevant. If a try step has no child nodes it should be deleted","title":"FQ23 - Try step must have child nodes (v10.3 onwards)"},{"location":"User Guide/PRIME Review Checks.html#fq24-catch-step-must-have-child-nodes-v103-onwards","text":"A catch step in a flow service must have a child node for it to be relevant. If a catch step has no child nodes it should be deleted","title":"FQ24 -  Catch step must have child nodes (v10.3 onwards)"},{"location":"User Guide/PRIME Review Checks.html#fq25-finally-step-must-have-child-nodes-v103-onwards","text":"A finally step in a flow service must have a child node for it to be relevant. If a finally step has no child nodes it should be deleted","title":"FQ25 - Finally step must have child nodes (v10.3 onwards)"},{"location":"User Guide/PRIME Review Checks.html#fq99-references-to-assets-should-exist","text":"References to other assets (such as Invocations to flow services and document references) should exist","title":"FQ99 - References to assets should exist"},{"location":"User Guide/PRIME Review Checks.html#ns1-root-folder-name","text":"Root Folder should not be the same as the package as this can cause namespace issues should the code need to be refactored or moved to other packages for promotion to common services, inhibiting reusability. Recommendation is to set a separate prefix folder structure from the package and use this across all packages differentiating below the prefix. This can be one or two levels deep (but ideally should be no more) and commonly is the inverse domain name of the organisation, e.g. \"com.softwareag\"","title":"NS1 - Root folder name"},{"location":"User Guide/PRIME Review Checks.html#ns2-folder-name","text":"Folders should only contain lower case ascii characters and digits. In certain scenarios, use of the underscore character '_' is allowed but should be avoided where possible.","title":"NS2 - Folder name"},{"location":"User Guide/PRIME Review Checks.html#ns3-folder-prefix","text":"Ensure that all assets exist within the specified prefix folders. Recommendation is to set a separate prefix folder structure from the package and use this across all packages differentiating below the prefix. This can be one or two levels deep (but ideally should be no more) and commonly is the inverse domain name of the organisation, e.g. \"com.softwareag\".","title":"NS3 - Folder prefix"},{"location":"User Guide/PRIME Review Checks.html#ns4-package-name","text":"Ensure the package prefix has been specified and package name conforms to standards. The package name should not end with the word \"Package\" or \"Pkg\". Package names must not be prefixed with \"Wm\". These usually represent packages distributed by webMethods. Packages should start with an uppercase character and only contain alpha numeric character plus the underscore when absolutely required. Package Name should start with your provided prefix. A package prefix aids identification of packages created by the organisation.","title":"NS4 - Package name"},{"location":"User Guide/PRIME Review Checks.html#ns5-service-name","text":"Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST services)","title":"NS5 - Service name"},{"location":"User Guide/PRIME Review Checks.html#ns6-document-name","text":"Ensure Document definition names conform to naming standards. A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary. Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check.","title":"NS6 - Document name"},{"location":"User Guide/PRIME Review Checks.html#ns7-schema-name","text":"Ensure Schemas definitions conform to naming standards. A schema must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary.","title":"NS7 - Schema name"},{"location":"User Guide/PRIME Review Checks.html#ns8-flatfile-name","text":"Ensure Flat File Dictionaries and Schema definitions conform to naming standards. They must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary.","title":"NS8 - FlatFile name"},{"location":"User Guide/PRIME Review Checks.html#ns9-blaze-name","text":"Ensure Blaze Rules Conform to the Naming Standards. Blaze rule service names must only contain alpha numeric characters and the underscore when absolutely necessary.","title":"NS9 - Blaze name"},{"location":"User Guide/PRIME Review Checks.html#ns10-xsl-name","text":"Ensure XSL Services Conform to the Naming Standards. XSL service names must start with a lower case letter, should be camel case, and contain only alpha numeric characters","title":"NS10 - XSL name"},{"location":"User Guide/PRIME Review Checks.html#ns11-adapter-name","text":"Ensure Adapter Services Conform to the Naming Standards. Adapter service names must start with a lower case letter, should be camel case, and contain only alpha numeric characters","title":"NS11 - Adapter name"},{"location":"User Guide/PRIME Review Checks.html#ns12-trigger-name","text":"Ensure Triggers Conform to the Naming Standards. Trigger names must start with a lower case letter, should be camel case, and contain only alpha numeric characters","title":"NS12 - Trigger name"},{"location":"User Guide/PRIME Review Checks.html#ns13-wsd-name","text":"Ensure WSDs Conform to the Naming Standards. WSD names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary","title":"NS13 - WSD name"},{"location":"User Guide/PRIME Review Checks.html#ns14-connection-name","text":"Ensure Connections Conform to the Naming Standards. Connection names must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary","title":"NS14 - Connection name"},{"location":"User Guide/PRIME Review Checks.html#ns15-document-variable-name","text":"Ensure variable names within document definitions conform to the naming standards. Variable names in document definitions must start with a lower case letter, should be camel case, and contain only alpha numeric characters. Caters for documents generated from XSDs where the document name may contain namespace prefix and use of underscore and hyphen present","title":"NS15 - Document variable name"},{"location":"User Guide/PRIME Review Checks.html#ns16-service-signature-name","text":"Ensure Input/Output variables in service signatures conform to the naming standards. Variable names in service signatures must start with a lower case letter, should be camel case, and contain only alpha numeric characters","title":"NS16 - Service signature name"},{"location":"User Guide/PRIME Review Checks.html#ns17-rest-resource-name","text":"Ensure REST Resources Conform to the Naming Standards. REST resource names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary","title":"NS17 - REST Resource name"},{"location":"User Guide/PRIME Review Checks.html#ns18-rest-descriptor-name","text":"Ensure REST Descriptors conform to the Naming Standards. REST descriptor names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary","title":"NS18 - REST Descriptor name"},{"location":"User Guide/PRIME Review Checks.html#ms1-non-production-service-package-suffixes","text":"Ensure packages with specified suffixes are not deployed to production. This is to ensure that test packages ( _TEST), stub packages ( _STUB) and development packages (*_DEV) are not deployed incorrectly into production class environments.","title":"MS1 - Non-production service package suffixes"},{"location":"User Guide/Reports.html","text":"Reports HTML Report The generated HTML report contains the full detail of each review item, as well as an overall summary. e.g. CSV Report The CVS report contains the raw data generated from the review presented in CSV format, .e.g ID NAME SERVICE CHECKID TEST_PASSED VALUE IGNORE_FAILURE RAGSTATUS 1 Stateless com.softwareag.core.monitor.impl:criticalAction SP1.1 TRUE yes FALSE 1 1 Stateless com.softwareag.core.monitor.impl:getSettings SP1.2 TRUE yes FALSE 1 1 Stateless com.softwareag.core.monitor.impl:invokeQuiesce SP1.3 TRUE yes FALSE 1 XML Report Contains the raw xml, useful if you want to build your own custom HTML repor An excerpt of an example report is below: ..... <results> <Summary> <total>6</total> <pass>6</pass> <fail>0</fail> <warn>0</warn> <ragStatus>1</ragStatus> <executeTime>112</executeTime> </Summary> <Report> <Test passed=\"true\" check-id=\"SP2.1\" ragStatus=\"1\" executeTime=\"15\"> <Service>com.softwareag.testsystem.impl:allowedLocations</Service> <Type>FLOWSERVICE</Type> <Value>true</Value> </Test> <Test passed=\"true\" check-id=\"SP2.2\" ragStatus=\"1\" executeTime=\"51\"> <Service>com.softwareag.testsystem.impl:callYahoo</Service> <Type>FLOWSERVICE</Type> <Value>true</Value> </Test> <Test passed=\"true\" check-id=\"SP2.3\" ragStatus=\"1\" executeTime=\"9\"> <Service>com.softwareag.testsystem.pub:isAllowedLocation</Service> <Type>FLOWSERVICE</Type> <Value>true</Value> </Test> <Test passed=\"true\" check-id=\"SP2.4\" ragStatus=\"1\" executeTime=\"7\"> <Service>com.softwareag.testsystem.pub.isitsunny:_get</Service> <Type>FLOWSERVICE</Type> <Value>true</Value> </Test> <Test passed=\"true\" check-id=\"SP2.5\" ragStatus=\"1\" executeTime=\"8\"> <Service>com.softwareag.testsystem.pub:isLocationSupported</Service> <Type>FLOWSERVICE</Type> <Value>true</Value> </Test> <Test passed=\"true\" check-id=\"SP2.6\" ragStatus=\"1\" executeTime=\"6\"> <Service>com.softwareag.testsystem.pub.weather:isItSunny</Service> <Type>FLOWSERVICE</Type> <Value>true</Value> </Test> </Report> </results> ..... <sensors> <sensor scope=\"package\"> <definition sensorName=\"totals\" sensorClass=\"com.softwareag.gcs.wm.codereview.sensors.TotalsSensor\"> <decorator name=\"FlowTotals\" class=\"com.softwareag.gcs.wm.codereview.decorators.SummaryTotals\"/> </definition> <results name=\"Flow Services\" value=\"6\"/> <results name=\"Java Services\" value=\"0\"/> <results name=\"Documents\" value=\"2\"/> <results name=\"Schemas\" value=\"0\"/> <results name=\"FF Dictionaries\" value=\"0\"/> <results name=\"FF Schemas\" value=\"0\"/> <results name=\"Blaze\" value=\"0\"/> ... JUnit Report This produces an XML Report constructed in JUnit format in order to be able to publish results to a CI Server","title":"Reports"},{"location":"User Guide/Reports.html#reports","text":"","title":"Reports"},{"location":"User Guide/Reports.html#html-report","text":"The generated HTML report contains the full detail of each review item, as well as an overall summary. e.g.","title":"HTML Report"},{"location":"User Guide/Reports.html#csv-report","text":"The CVS report contains the raw data generated from the review presented in CSV format, .e.g ID NAME SERVICE CHECKID TEST_PASSED VALUE IGNORE_FAILURE RAGSTATUS 1 Stateless com.softwareag.core.monitor.impl:criticalAction SP1.1 TRUE yes FALSE 1 1 Stateless com.softwareag.core.monitor.impl:getSettings SP1.2 TRUE yes FALSE 1 1 Stateless com.softwareag.core.monitor.impl:invokeQuiesce SP1.3 TRUE yes FALSE 1","title":"CSV Report"},{"location":"User Guide/Reports.html#xml-report","text":"Contains the raw xml, useful if you want to build your own custom HTML repor An excerpt of an example report is below: ..... <results> <Summary> <total>6</total> <pass>6</pass> <fail>0</fail> <warn>0</warn> <ragStatus>1</ragStatus> <executeTime>112</executeTime> </Summary> <Report> <Test passed=\"true\" check-id=\"SP2.1\" ragStatus=\"1\" executeTime=\"15\"> <Service>com.softwareag.testsystem.impl:allowedLocations</Service> <Type>FLOWSERVICE</Type> <Value>true</Value> </Test> <Test passed=\"true\" check-id=\"SP2.2\" ragStatus=\"1\" executeTime=\"51\"> <Service>com.softwareag.testsystem.impl:callYahoo</Service> <Type>FLOWSERVICE</Type> <Value>true</Value> </Test> <Test passed=\"true\" check-id=\"SP2.3\" ragStatus=\"1\" executeTime=\"9\"> <Service>com.softwareag.testsystem.pub:isAllowedLocation</Service> <Type>FLOWSERVICE</Type> <Value>true</Value> </Test> <Test passed=\"true\" check-id=\"SP2.4\" ragStatus=\"1\" executeTime=\"7\"> <Service>com.softwareag.testsystem.pub.isitsunny:_get</Service> <Type>FLOWSERVICE</Type> <Value>true</Value> </Test> <Test passed=\"true\" check-id=\"SP2.5\" ragStatus=\"1\" executeTime=\"8\"> <Service>com.softwareag.testsystem.pub:isLocationSupported</Service> <Type>FLOWSERVICE</Type> <Value>true</Value> </Test> <Test passed=\"true\" check-id=\"SP2.6\" ragStatus=\"1\" executeTime=\"6\"> <Service>com.softwareag.testsystem.pub.weather:isItSunny</Service> <Type>FLOWSERVICE</Type> <Value>true</Value> </Test> </Report> </results> ..... <sensors> <sensor scope=\"package\"> <definition sensorName=\"totals\" sensorClass=\"com.softwareag.gcs.wm.codereview.sensors.TotalsSensor\"> <decorator name=\"FlowTotals\" class=\"com.softwareag.gcs.wm.codereview.decorators.SummaryTotals\"/> </definition> <results name=\"Flow Services\" value=\"6\"/> <results name=\"Java Services\" value=\"0\"/> <results name=\"Documents\" value=\"2\"/> <results name=\"Schemas\" value=\"0\"/> <results name=\"FF Dictionaries\" value=\"0\"/> <results name=\"FF Schemas\" value=\"0\"/> <results name=\"Blaze\" value=\"0\"/> ...","title":"XML Report"},{"location":"User Guide/Reports.html#junit-report","text":"This produces an XML Report constructed in JUnit format in order to be able to publish results to a CI Server","title":"JUnit Report"}]}